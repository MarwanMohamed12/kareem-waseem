Coverage Report by file with details

=================================================================================
=== File: ALSU.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           48        48         0     100.0

================================Statement Details================================

Statement Coverage for file ALSU.sv --

    1                                                module ALSU(ALSU_if if_t);
    2                                                
    3                                                reg red_op_A_reg, red_op_B_reg, bypass_A_reg, bypass_B_reg, direction_reg, serial_in_reg;
    4                                                reg signed [1:0] cin_reg;
    5                                                reg [2:0] opcode_reg; 
    6                                                reg signed [2:0] A_reg, B_reg; //change to signed 
    7                                                reg signed [5:0] out_next;
    8                                                wire invalid_red_op, invalid_opcode, invalid;
    9                                                
    10                                               reg signed [5:0]out_shift_reg;
    11                                               
    12                                               //Invalid handling
    13              1                      47952     assign invalid_red_op = (red_op_A_reg | red_op_B_reg) & (opcode_reg[1] | opcode_reg[2]);
    14              1                      45749     assign invalid_opcode = opcode_reg[1] & opcode_reg[2];
    15              1                       9978     assign invalid = invalid_red_op | invalid_opcode;
    16                                               
    17                                               
    18                                               
    19                                               //Registering input signals
    20              1                      50891     always @(posedge if_t.clk or posedge if_t.rst) begin
    21                                                 if(if_t.rst) begin
    22              1                       1825          cin_reg <= 0;
    23              1                       1825          red_op_B_reg <= 0;
    24              1                       1825          red_op_A_reg <= 0;
    25              1                       1825          bypass_B_reg <= 0;
    26              1                       1825          bypass_A_reg <= 0;
    27              1                       1825          direction_reg <= 0;
    28              1                       1825          serial_in_reg <= 0;
    29              1                       1825          opcode_reg <= 0;
    30              1                       1825          A_reg <= 0;
    31              1                       1825          B_reg <= 0;
    32                                               
    33                                                 end else begin
    34              1                      49066          cin_reg <= if_t.cin;
    35              1                      49066          red_op_B_reg <= if_t.red_op_B;
    36              1                      49066          red_op_A_reg <= if_t.red_op_A;
    37              1                      49066          bypass_B_reg <= if_t.bypass_B;
    38              1                      49066          bypass_A_reg <= if_t.bypass_A;
    39              1                      49066          direction_reg <= if_t.direction;
    40              1                      49066          serial_in_reg <= if_t.serial_in;
    41              1                      49066          opcode_reg <= if_t.opcode;
    42              1                      49066          A_reg <= if_t.A;
    43              1                      49066          B_reg <= if_t.B;
    44                                                  
    45                                                 end
    46                                               end
    47                                               
    48                                               //leds output blinking 
    49              1                      50891     always @(posedge if_t.clk or posedge if_t.rst) begin
    50                                                 if(if_t.rst) begin
    51              1                       1825          if_t.leds <= 0;
    52                                                 end else begin
    53                                                     if (invalid)
    54              1                       9046             if_t.leds <= ~if_t.leds;
    55                                                     else
    56              1                      40020             if_t.leds <= 0;
    57                                                 end
    58                                               end
    59                                               
    60                                               //ALSU output processing
    61              1                      50891     always @(posedge if_t.clk or posedge if_t.rst) begin
    62                                                
    63                                                 if(if_t.rst) begin
    64              1                       1825         if_t.out <= 0;
    65                                                 end
    66                                                 else begin
    67                                                   if (bypass_A_reg && bypass_B_reg)
    68              1                        189           if_t.out <= (if_t.INPUT_PRIORITY == "A")?A_reg: B_reg;
    69                                                   else if (bypass_A_reg)
    70              1                       1618           if_t.out <= A_reg;
    71                                                   else if (bypass_B_reg)
    72              1                       1584           if_t.out <= B_reg;
    73                                                   else if (invalid) // cahnge the priority of invalid bits after bypass_reg 
    74              1                       7359             if_t.out <= 0;
    75                                                   else begin
    76                                                       case (opcode_reg)
    77                                                         3'h0: begin //change Opcode to OR not AND
    78                                                           if (red_op_A_reg && red_op_B_reg)
    79              1                        377                   if_t.out <= (if_t.INPUT_PRIORITY == "A")? |A_reg: |B_reg;
    80                                                           else if (red_op_A_reg) 
    81              1                        240                   if_t.out <= |A_reg;
    82                                                           else if (red_op_B_reg)
    83              1                        221                   if_t.out <= |B_reg;
    84                                                           else 
    85              1                       7547                   if_t.out <= A_reg | B_reg;
    86                                                         end
    87                                                         3'h1: begin // change opcode to XOR not OR
    88                                                           if (red_op_A_reg && red_op_B_reg)
    89              1                        342                   if_t.out <= (if_t.INPUT_PRIORITY == "A")? ^A_reg: ^B_reg;
    90                                                           else if (red_op_A_reg) 
    91              1                        203                   if_t.out <= ^A_reg;
    92                                                           else if (red_op_B_reg)
    93              1                        247                   if_t.out <= ^B_reg;
    94                                                           else 
    95              1                       6654                   if_t.out <= A_reg ^ B_reg;
    96                                                         end
    97                                                         3'h2: begin //here we add condition to check full adder if ON or OFF
    98                                                           if(if_t.FULL_ADDER == "ON") 
    99              1                       5667                   if_t.out <= A_reg + B_reg+cin_reg;
    100                                                          else if(if_t.FULL_ADDER == "OFF") 
    101             1                          E                   if_t.out <= A_reg + B_reg;
    102                                                          
    103                                              
    104                                                        end
    105             1                       5609               3'h3: if_t.out <= A_reg * B_reg;
    106                                                        3'h4: begin //100
    107             1                       5604                   if_t.out <= out_shift_reg;
    108                                                        end
    109                                                        3'h5: begin//101        
    110             1                       5604                   if_t.out <= out_shift_reg;
    111                                                        end
    112             1                          1             default: if_t.out<=if_t.out;
    113                                                      endcase
    114                                                  end 
    115                                                end
    116             1                      50891       out_next<=if_t.out;
    117                                              end
    118                                              
    119                                              endmodule

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                        30        29         1      96.6

================================Branch Details================================

Branch Coverage for file ALSU.sv --

------------------------------------IF Branch------------------------------------
    21                                     50891     Count coming in to IF
    21              1                       1825       if(if_t.rst) begin
    33              1                      49066       end else begin
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    50                                     50891     Count coming in to IF
    50              1                       1825       if(if_t.rst) begin
    52              1                      49066       end else begin
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    53                                     49066     Count coming in to IF
    53              1                       9046           if (invalid)
    55              1                      40020           else
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    63                                     50891     Count coming in to IF
    63              1                       1825       if(if_t.rst) begin
    66              1                      49066       else begin
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    67                                     49066     Count coming in to IF
    67              1                        189         if (bypass_A_reg && bypass_B_reg)
    69              1                       1618         else if (bypass_A_reg)
    71              1                       1584         else if (bypass_B_reg)
    73              1                       7359         else if (invalid) // cahnge the priority of invalid bits after bypass_reg 
    75              1                      38316         else begin
Branch totals: 5 hits of 5 branches = 100.0%

------------------------------------IF Branch------------------------------------
    68                                       189     Count coming in to IF
    68              1                      E-hit           if_t.out <= (if_t.INPUT_PRIORITY == "A")?A_reg: B_reg;
    68              2                          E           if_t.out <= (if_t.INPUT_PRIORITY == "A")?A_reg: B_reg;
Branch totals: 0 hits of 0 branches = 100.0%

------------------------------------CASE Branch------------------------------------
    76                                     38316     Count coming in to CASE
    77              1                       8385               3'h0: begin //change Opcode to OR not AND
    87              1                       7446               3'h1: begin // change opcode to XOR not OR
    97              1                       5667               3'h2: begin //here we add condition to check full adder if ON or OFF
    105             1                       5609               3'h3: if_t.out <= A_reg * B_reg;
    106             1                       5604               3'h4: begin //100
    109             1                       5604               3'h5: begin//101        
    112             1                          1             default: if_t.out<=if_t.out;
Branch totals: 7 hits of 7 branches = 100.0%

------------------------------------IF Branch------------------------------------
    78                                      8385     Count coming in to IF
    78              1                        377                 if (red_op_A_reg && red_op_B_reg)
    80              1                        240                 else if (red_op_A_reg) 
    82              1                        221                 else if (red_op_B_reg)
    84              1                       7547                 else 
Branch totals: 4 hits of 4 branches = 100.0%

------------------------------------IF Branch------------------------------------
    79                                       377     Count coming in to IF
    79              1                      E-hit                   if_t.out <= (if_t.INPUT_PRIORITY == "A")? |A_reg: |B_reg;
    79              2                          E                   if_t.out <= (if_t.INPUT_PRIORITY == "A")? |A_reg: |B_reg;
Branch totals: 0 hits of 0 branches = 100.0%

------------------------------------IF Branch------------------------------------
    88                                      7446     Count coming in to IF
    88              1                        342                 if (red_op_A_reg && red_op_B_reg)
    90              1                        203                 else if (red_op_A_reg) 
    92              1                        247                 else if (red_op_B_reg)
    94              1                       6654                 else 
Branch totals: 4 hits of 4 branches = 100.0%

------------------------------------IF Branch------------------------------------
    89                                       342     Count coming in to IF
    89              1                      E-hit                   if_t.out <= (if_t.INPUT_PRIORITY == "A")? ^A_reg: ^B_reg;
    89              2                          E                   if_t.out <= (if_t.INPUT_PRIORITY == "A")? ^A_reg: ^B_reg;
Branch totals: 0 hits of 0 branches = 100.0%

------------------------------------IF Branch------------------------------------
    98                                      5667     Count coming in to IF
    98              1                       5667                 if(if_t.FULL_ADDER == "ON") 
    100             1                          E                 else if(if_t.FULL_ADDER == "OFF") 
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              6         6         0     100.0

================================Condition Details================================

Condition Coverage for file ALSU.sv --

----------------Focused Condition View-------------------
Line       67 Item    1  (bypass_A_reg && bypass_B_reg)
Condition totals: 2 of 2 input terms covered = 100.0%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  bypass_A_reg         Y
  bypass_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  bypass_A_reg_0        -                             
  Row   2:          1  bypass_A_reg_1        bypass_B_reg                  
  Row   3:          1  bypass_B_reg_0        bypass_A_reg                  
  Row   4:          1  bypass_B_reg_1        bypass_A_reg                  

----------------Focused Condition View-------------------
Line       78 Item    1  (red_op_A_reg && red_op_B_reg)
Condition totals: 2 of 2 input terms covered = 100.0%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         Y
  red_op_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        -                             
  Row   2:          1  red_op_A_reg_1        red_op_B_reg                  
  Row   3:          1  red_op_B_reg_0        red_op_A_reg                  
  Row   4:          1  red_op_B_reg_1        red_op_A_reg                  

----------------Focused Condition View-------------------
Line       88 Item    1  (red_op_A_reg && red_op_B_reg)
Condition totals: 2 of 2 input terms covered = 100.0%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         Y
  red_op_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        -                             
  Row   2:          1  red_op_A_reg_1        red_op_B_reg                  
  Row   3:          1  red_op_B_reg_0        red_op_A_reg                  
  Row   4:          1  red_op_B_reg_1        red_op_A_reg                  


Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             8         5         3      62.5

================================Expression Details================================

Expression Coverage for file ALSU.sv --

----------------Focused Expression View-----------------
Line       13 Item    1  ((red_op_A_reg | red_op_B_reg) & (opcode_reg[1] | opcode_reg[2]))
Expression totals: 4 of 4 input terms covered = 100.0%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
   red_op_A_reg         Y
   red_op_B_reg         Y
  opcode_reg[1]         Y
  opcode_reg[2]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_B_reg)
  Row   2:          1  red_op_A_reg_1        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_B_reg)
  Row   3:          1  red_op_B_reg_0        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_A_reg)
  Row   4:          1  red_op_B_reg_1        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_A_reg)
  Row   5:          1  opcode_reg[1]_0       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[2])
  Row   6:          1  opcode_reg[1]_1       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[2])
  Row   7:          1  opcode_reg[2]_0       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[1])
  Row   8:          1  opcode_reg[2]_1       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[1])

----------------Focused Expression View-----------------
Line       14 Item    1  (opcode_reg[1] & opcode_reg[2])
Expression totals: 0 of 2 input terms covered = 0.0%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  opcode_reg[1]         N  '_1' not hit             Hit '_1'
  opcode_reg[2]         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  opcode_reg[1]_0       opcode_reg[2]                 
  Row   2:    ***0***  opcode_reg[1]_1       opcode_reg[2]                 
  Row   3:          1  opcode_reg[2]_0       opcode_reg[1]                 
  Row   4:    ***0***  opcode_reg[2]_1       opcode_reg[1]                 

----------------Focused Expression View-----------------
Line       15 Item    1  (invalid_red_op | invalid_opcode)
Expression totals: 1 of 2 input terms covered = 50.0%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  invalid_red_op         Y
  invalid_opcode         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  invalid_red_op_0      ~invalid_opcode               
  Row   2:          1  invalid_red_op_1      ~invalid_opcode               
  Row   3:          1  invalid_opcode_0      ~invalid_red_op               
  Row   4:    ***0***  invalid_opcode_1      ~invalid_red_op               


FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                     62        62         0     100.0

================================Toggle Details================================

Toggle Coverage for File ALSU.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------
          3                          serial_in_reg           1           1                              100.00 
          3                           red_op_B_reg           1           1                              100.00 
          3                           red_op_A_reg           1           1                              100.00 
          3                          direction_reg           1           1                              100.00 
          3                           bypass_B_reg           1           1                              100.00 
          3                           bypass_A_reg           1           1                              100.00 
          4                             cin_reg[1]           1           1                              100.00 
          4                             cin_reg[0]           1           1                              100.00 
          5                          opcode_reg[2]           1           1                              100.00 
          5                          opcode_reg[1]           1           1                              100.00 
          5                          opcode_reg[0]           1           1                              100.00 
          6                               B_reg[2]           1           1                              100.00 
          6                               B_reg[1]           1           1                              100.00 
          6                               B_reg[0]           1           1                              100.00 
          6                               A_reg[2]           1           1                              100.00 
          6                               A_reg[1]           1           1                              100.00 
          6                               A_reg[0]           1           1                              100.00 
          7                            out_next[5]           1           1                              100.00 
          7                            out_next[4]           1           1                              100.00 
          7                            out_next[3]           1           1                              100.00 
          7                            out_next[2]           1           1                              100.00 
          7                            out_next[1]           1           1                              100.00 
          7                            out_next[0]           1           1                              100.00 
          8                         invalid_red_op           1           1                              100.00 
          8                                invalid           1           1                              100.00 
         10                       out_shift_reg[5]           1           1                              100.00 
         10                       out_shift_reg[4]           1           1                              100.00 
         10                       out_shift_reg[3]           1           1                              100.00 
         10                       out_shift_reg[2]           1           1                              100.00 
         10                       out_shift_reg[1]           1           1                              100.00 
         10                       out_shift_reg[0]           1           1                              100.00 

Total Node Count     =         31 
Toggled Node Count   =         31 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (62 of 62 bins)

=================================================================================
=== File: ALSU_agent.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           16        13         3      81.2

================================Statement Details================================

Statement Coverage for file ALSU_agent.sv --

    1                                                package ALSU_agent_pkg;
    2                                                    import uvm_pkg::*;
    3                                                        `include "uvm_macros.svh"
    4                                                    import ALSU_monitor_pkg::*;
    5                                                    import ALSU_sequencer_pkg::*;
    6                                                    import ALSU_driver_pkg::*;
    7                                                    import ALSU_seq_item_pkg::*;
    8                                                    import config_object_pkg::*;
    9                                                
    10                                                   class  ALSU_agent extends uvm_agent;
    11              1                    ***0***             `uvm_component_utils(ALSU_agent);
    11              2                    ***0***     
    11              3                          2     
    12                                                       ALSU_mointor mon;
    13                                                       ALSU_sequencer sqr;
    14                                                       ALSU_driver driver;
    15                                                       ALSU_config cfg;
    16                                                       uvm_analysis_port #(seq_item) agt_p;
    17                                                       uvm_active_passive_enum is_active;
    18                                               
    19                                               
    20                                                       function new(string name ="agent",uvm_component parent=null);
    21              1                          1                 super.new(name,parent);
    22                                                       endfunction 
    23                                               
    24                                                       function void build_phase(uvm_phase phase);
    25              1                          1                 super.build_phase(phase);
    26                                               
    27              1                          1                 mon=ALSU_mointor::type_id::create("monitor",this);
    28              1                          1                 agt_p=new("agent port",this);
    29                                                           if(!uvm_config_db #(ALSU_config)::get(this,"","ALSU_cfg",cfg))
    30              1                    ***0***                     `uvm_fatal("build_phase","cant get ALSU virtual interface");
    31              1                          1                 is_active=cfg.is_active;
    32                                                           if(is_active==UVM_ACTIVE)begin            
    33              1                          1                     sqr=ALSU_sequencer::type_id::create("sequencer",this);
    34              1                          1                     driver=ALSU_driver::type_id::create("driver",this);
    35                                                           end
    36                                                       endfunction
    37                                               
    38                                                       function void connect_phase(uvm_phase phase);
    39              1                          1                 super.connect_phase(phase);
    40                                                           if(is_active==UVM_ACTIVE)begin            
    41              1                          1                     driver.vif=cfg.vif;
    42              1                          1                     driver.seq_item_port.connect(sqr.seq_item_export);
    43                                                           end
    44              1                          1                 mon.vif=cfg.vif;
    45              1                          1                 mon.mon_p.connect(agt_p);
    46                                                       endfunction
    47                                               
    48                                               
    49                                                   endclass //ALSU_if
    50                                               
    51                                                   
    52                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         8         3         5      37.5

================================Branch Details================================

Branch Coverage for file ALSU_agent.sv --

------------------------------------IF Branch------------------------------------
    29                                         1     Count coming in to IF
    29              1                    ***0***                 if(!uvm_config_db #(ALSU_config)::get(this,"","ALSU_cfg",cfg))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    30                                   ***0***     Count coming in to IF
    30              1                    ***0***                     `uvm_fatal("build_phase","cant get ALSU virtual interface");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    32                                         1     Count coming in to IF
    32              1                          1                 if(is_active==UVM_ACTIVE)begin            
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    40                                         1     Count coming in to IF
    40              1                          1                 if(is_active==UVM_ACTIVE)begin            
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File ALSU_agent.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: ALSU_coverage.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           14        12         2      85.7

================================Statement Details================================

Statement Coverage for file ALSU_coverage.sv --

    1                                                package ALSU_coverage_pkg;
    2                                                    import uvm_pkg::*;
    3                                                        `include "uvm_macros.svh"
    4                                                    import ALSU_seq_item_pkg::*;
    5                                                            import constant_enums::*;
    6                                                
    7                                                    class ALSU_coverage extends uvm_component;
    8               1                    ***0***             `uvm_component_utils(ALSU_coverage);
    8               2                    ***0***     
    8               3                          2     
    9                                                        
    10                                                       seq_item item;
    11                                                       uvm_analysis_export #(seq_item)cov_ep;
    12                                                       uvm_tlm_analysis_fifo #(seq_item) cov_fifo;
    13                                               
    14                                                       covergroup cvr_gp;
    15                                               
    16                                                       CIN:coverpoint item.cin{
    17                                                           bins CIN0={0};
    18                                                           bins CIN1={1};
    19                                                           option.weight=0;
    20                                                       }
    21                                               
    22                                                       red_op_A:coverpoint item.red_op_A{
    23                                                           bins red_op_A0={0};
    24                                                           bins red_op_A1={1};
    25                                                           option.weight=0;
    26                                                       }
    27                                                       red_op_B:coverpoint item.red_op_B{
    28                                                           bins red_op_B0={0};
    29                                                           bins red_op_B1={1};
    30                                                           option.weight=0;
    31                                                       }
    32                                                       bypass_A:coverpoint item.bypass_A{
    33                                                           bins bypass_A0={0};
    34                                                           bins bypass_A1={1};
    35                                                           option.weight=0;
    36                                                       }
    37                                                       bypass_B:coverpoint item.bypass_B{
    38                                                           bins bypass_B0={0};
    39                                                           bins bypass_B1={1};
    40                                                           option.weight=0;
    41                                                       }
    42                                                       direction:coverpoint item.direction{
    43                                                           bins direction0={0};
    44                                                           bins direction1={1};
    45                                                           option.weight=0;
    46                                                       }
    47                                                       serial_in:coverpoint item.serial_in{
    48                                                           bins serial_in0={0};
    49                                                           bins serial_in1={1};
    50                                                           option.weight=0;
    51                                                       }
    52                                               
    53                                               
    54                                                       special:coverpoint item.opcode{
    55                                                           option.weight=0;
    56                                                           bins operataions[]={[OR:ROTATE]};
    57                                                       }
    58                                                       CB1:coverpoint item.A{
    59                                                           bins A_data_0={0};
    60                                                           bins A_data_max={MAXPOS};
    61                                                           bins A_data_min={MAXNEG};
    62                                                           bins A_data_walkingones[] ={3'b001,3'b010,3'b100} iff (item.red_op_A);
    63                                                           bins A_data_default=default;
    64                                                       }
    65                                                       CB2:coverpoint item.B{
    66                                                           bins B_data_0={0};
    67                                                           bins B_data_max={MAXPOS};
    68                                                           bins B_data_min={MAXNEG};
    69                                                           bins B_data_walkingones[] ={3'b001,3'b010,3'b100} iff (item.red_op_B);
    70                                                           bins B_data_default=default;
    71                                                       }
    72                                                       A_M:coverpoint item.opcode{
    73                                                           bins Bins_arith[] ={ADD,MULT};
    74                                                       }
    75                                                       CB3:coverpoint item.opcode{
    76                                                           bins Bins_shift[]={SHIFT,ROTATE};
    77                                                           bins Bins_arith[] ={ADD,MULT};
    78                                                           bins Bins_bitwise[] ={OR,XOR};
    79                                                           illegal_bins Bins_invalid ={INVALID6,INVALID7};
    80                                                           bins Bins_trans=(OR=>XOR=>ADD=>MULT=>SHIFT=>ROTATE);
    81                                                       }
    82                                                       //1
    83                                                       corner_case:cross A_M,CB2,CB1{
    84                                                           ignore_bins walkingA=binsof(CB1.A_data_walkingones) ;
    85                                                           ignore_bins walkingB=binsof(CB2.B_data_walkingones) ;
    86                                                       }
    87                                                       //2
    88                                                       Addation:cross CIN,special{
    89                                                           option.cross_auto_bin_max=0;
    90                                                           bins Add_cin0=binsof(special) intersect {ADD} && binsof(CIN.CIN0) ;
    91                                                           bins Add_cin1=binsof(special) intersect {ADD} && binsof(CIN.CIN1) ;
    92                                                       }
    93                                                       //3
    94                                                       shift:cross special,serial_in{
    95                                                           option.cross_auto_bin_max=0;
    96                                                           bins shift_Si0=binsof(special) intersect {SHIFT} && binsof(serial_in.serial_in0) ;
    97                                                           bins shift_Si1=binsof(special) intersect {SHIFT} && binsof(serial_in.serial_in0) ;
    98                                                       }
    99                                                       //4
    100                                                      shift_rotate:cross CB3,direction{
    101                                                          option.cross_auto_bin_max=0;
    102                                                          bins shu_rot_d0=binsof(CB3.Bins_shift) && binsof(direction.direction0) ;
    103                                                          bins shu_rot_d1=binsof(CB3.Bins_shift) && binsof(direction.direction1) ;
    104                                                      }
    105                                                      //5
    106                                                      walkingones:cross CB3,CB2,CB1{
    107                                                          option.cross_auto_bin_max=0;
    108                                                          bins arithA=binsof(CB3.Bins_bitwise) && binsof(CB2.B_data_0) &&binsof(CB1.A_data_walkingones) ;
    109                                                          bins arithB=binsof(CB3.Bins_bitwise) && binsof(CB1.A_data_0) &&binsof(CB2.B_data_walkingones) ;
    110                                                      }
    111                                                      invalidation:cross red_op_A,red_op_B,special{
    112                                              	    option.cross_auto_bin_max=0;
    113                                                          bins ROpA_notXoR=binsof(special) intersect{[ADD:ROTATE]} && binsof(red_op_A.red_op_A1)  ;
    114                                                          bins ROpB_notXoR=binsof(special) intersect{[ADD:ROTATE]} && binsof(red_op_B.red_op_B1)  ;
    115                                                      }
    116                                                  endgroup
    117                                              
    118                                                      function new(string name ="coverage",uvm_component parent=null);
    119             1                          1                 super.new(name,parent);
    120             1                          1                 cvr_gp=new();
    121                                                      endfunction 
    122                                              
    123                                              
    124                                                      function void build_phase(uvm_phase phase);
    125             1                          1                 super.build_phase(phase);
    126             1                          1                 cov_fifo=new("fifo",this);
    127             1                          1                 cov_ep=new("cov_export",this);
    128                                                      endfunction
    129                                              
    130                                                      function void connect_phase(uvm_phase phase);  
    131             1                          1                 super.connect_phase(phase);
    132             1                          1                 cov_ep.connect(cov_fifo.analysis_export);
    133                                                      endfunction
    134                                              
    135                                                      task run_phase(uvm_phase phase);  
    136             1                          1                 super.run_phase(phase);
    137             1                          1                 forever begin
    138             1                      50001                     cov_fifo.get(item);
    139             1                      50000                     cvr_gp.sample();
    140                                                          end
    141                                              
    142                                                      endtask
    143                                              
    144                                              
    145                                                  endclass //ALSU_if
    146                                              
    147                                                  
    148                                              endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         0         0         0     100.0
Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File ALSU_coverage.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: ALSU_driver.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           21        19         2      90.4

================================Statement Details================================

Statement Coverage for file ALSU_driver.sv --

    1                                                package ALSU_driver_pkg;
    2                                                    import uvm_pkg::*;
    3                                                        `include "uvm_macros.svh"
    4                                                    import ALSU_seq_item_pkg::*;
    5                                                
    6                                                
    7                                                    class ALSU_driver extends uvm_driver #(seq_item);
    8               1                    ***0***             `uvm_component_utils(ALSU_driver);
    8               2                    ***0***     
    8               3                          2     
    9                                                
    10                                                       virtual ALSU_if vif;
    11                                                       seq_item item;
    12                                               
    13                                                       function new(string name ="driver",uvm_component parent=null);
    14              1                          1                 super.new(name,parent);
    15                                                       endfunction 
    16                                               
    17                                                       task run_phase(uvm_phase phase);
    18              1                          1                 super.run_phase(phase);
    19              1                          1                 forever begin
    20              1                      50001                     item=seq_item::type_id::create("seq item");
    21              1                      50001                     seq_item_port.get_next_item(item);
    22              1                      50000                     vif.rst=item.rst;
    23              1                      50000                     vif.A=item.A;
    24              1                      50000                     vif.B=item.B;
    25              1                      50000                     vif.cin=item.cin;
    26              1                      50000                     vif.red_op_A=item.red_op_A;
    27              1                      50000                     vif.red_op_B=item.red_op_B;
    28              1                      50000                     vif.bypass_A=item.bypass_A;
    29              1                      50000                     vif.bypass_B=item.bypass_B;
    30              1                      50000                     vif.direction=item.direction;
    31              1                      50000                     vif.serial_in=item.serial_in;
    32              1                      50000                     vif.opcode=item.opcode;
    33              1                      50000                     @(negedge vif.clk);
    34              1                      50000                     seq_item_port.item_done();
    35                                                           end
    36                                                       endtask
    37                                               
    38                                                   endclass //ALSU_if
    39                                               
    40                                                   
    41                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         0         0         0     100.0
Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File ALSU_driver.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: ALSU_env.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                            9         7         2      77.7

================================Statement Details================================

Statement Coverage for file ALSU_env.sv --

    1                                                package ALSU_env_pkg;
    2                                                    import uvm_pkg::*;
    3                                                        `include "uvm_macros.svh"
    4                                                    import ALSU_coverage_pkg::*;    
    5                                                    import ALSU_agent_pkg::*;
    6                                                
    7                                                    class ALSU_env extends uvm_env;
    8               1                    ***0***             `uvm_component_utils(ALSU_env);
    8               2                    ***0***     
    8               3                          2     
    9                                                        ALSU_coverage cov;
    10                                                       ALSU_agent agt;
    11                                               
    12                                                       function new(string name ="env",uvm_component parent=null);
    13              1                          1                 super.new(name,parent);
    14                                                       endfunction 
    15                                               
    16                                                       function void build_phase(uvm_phase phase);
    17              1                          1                 super.build_phase(phase);
    18              1                          1                 cov=ALSU_coverage::type_id::create("coverage",this);
    19              1                          1                 agt=ALSU_agent::type_id::create("agent",this);
    20                                                       endfunction
    21                                               
    22                                                       function void connect_phase(uvm_phase phase);
    23              1                          1                 super.connect_phase(phase);
    24              1                          1                 agt.agt_p.connect(cov.cov_ep);
    25                                                       endfunction
    26                                               
    27                                                   endclass //ALSU_if
    28                                               
    29                                                   
    30                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         0         0         0     100.0
Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File ALSU_env.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: ALSU_if.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                            0         0         0     100.0
Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         0         0         0     100.0
Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                     82        80         2      97.5

================================Toggle Details================================

Toggle Coverage for File ALSU_if.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------
          4                                    clk           1           1                              100.00 
          8                              serial_in           1           1                              100.00 
          8                                    rst           1           1                              100.00 
          8                               red_op_B           1           1                              100.00 
          8                               red_op_A           1           1                              100.00 
          8                              direction           1           1                              100.00 
          8                               bypass_B           1           1                              100.00 
          8                               bypass_A           1           1                              100.00 
          9                                    cin           1           1                              100.00 
         10                                 opcode               ENUM type       Value       Count 
                                                                        OR        7667      100.00 
                                                                       XOR        7655      100.00 
                                                                       ADD        7625      100.00 
                                                                      MULT        7643      100.00 
                                                                     SHIFT        7551      100.00 
                                                                    ROTATE        7668      100.00 
                                                                  INVALID6           0        0.00 
                                                                  INVALID7           0        0.00 
         11                                   B[2]           1           1                              100.00 
         11                                   B[1]           1           1                              100.00 
         11                                   B[0]           1           1                              100.00 
         11                                   A[2]           1           1                              100.00 
         11                                   A[1]           1           1                              100.00 
         11                                   A[0]           1           1                              100.00 
         12                                leds[9]           1           1                              100.00 
         12                                leds[8]           1           1                              100.00 
         12                                leds[7]           1           1                              100.00 
         12                                leds[6]           1           1                              100.00 
         12                                leds[5]           1           1                              100.00 
         12                                leds[4]           1           1                              100.00 
         12                                leds[3]           1           1                              100.00 
         12                                leds[2]           1           1                              100.00 
         12                                leds[1]           1           1                              100.00 
         12                               leds[15]           1           1                              100.00 
         12                               leds[14]           1           1                              100.00 
         12                               leds[13]           1           1                              100.00 
         12                               leds[12]           1           1                              100.00 
         12                               leds[11]           1           1                              100.00 
         12                               leds[10]           1           1                              100.00 
         12                                leds[0]           1           1                              100.00 
         13                                 out[5]           1           1                              100.00 
         13                                 out[4]           1           1                              100.00 
         13                                 out[3]           1           1                              100.00 
         13                                 out[2]           1           1                              100.00 
         13                                 out[1]           1           1                              100.00 
         13                                 out[0]           1           1                              100.00 

Total Node Count     =         45 
Toggled Node Count   =         43 
Untoggled Node Count =          2 

Toggle Coverage      =       97.5% (80 of 82 bins)

=================================================================================
=== File: ALSU_monitor.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           23        20         3      86.9

================================Statement Details================================

Statement Coverage for file ALSU_monitor.sv --

    1                                                package ALSU_monitor_pkg;
    2                                                    import uvm_pkg::*;
    3                                                        `include "uvm_macros.svh"
    4                                                    import ALSU_seq_item_pkg::*;    
    5                                                
    6                                                    class ALSU_mointor extends uvm_monitor ;
    7               1                    ***0***             `uvm_component_utils(ALSU_mointor);
    7               2                    ***0***     
    7               3                          2     
    8                                                        virtual ALSU_if vif;
    9                                                        seq_item item;
    10                                                       uvm_analysis_port #(seq_item) mon_p;
    11                                               
    12                                                       function new(string name ="",uvm_component parent=null);
    13              1                          1                 super.new(name,parent);
    14                                                       endfunction 
    15                                               
    16                                                       function void build_phase(uvm_phase phase);
    17              1                          1                 super.build_phase(phase);
    18              1                          1                 mon_p=new("alsu monitor port",this);
    19                                                       endfunction
    20                                               
    21                                                       task run_phase(uvm_phase phase);
    22              1                          1                 super.run_phase(phase);
    23              1                          1                 forever begin
    24              1                      50001                     item=seq_item::type_id::create("items recived");
    25              1                      50001                     @(negedge vif.clk);
    26              1                      50000                     item.rst=vif.rst;
    27              1                      50000                     item.A=vif.A;
    28              1                      50000                     item.B=vif.B;
    29              1                      50000                     item.cin=vif.cin;
    30              1                      50000                     item.red_op_A=vif.red_op_A;
    31              1                      50000                     item.red_op_B=vif.red_op_B;
    32              1                      50000                     item.bypass_A=vif.bypass_A;
    33              1                      50000                     item.bypass_B=vif.bypass_B;
    34              1                      50000                     item.direction=vif.direction;
    35              1                      50000                     item.serial_in=vif.serial_in;
    36              1                      50000                     item.opcode=vif.opcode;
    37              1                      50000                     mon_p.write(item);
    38              1                    ***0***                      `uvm_info("run_phase",item.convert2string(),UVM_HIGH);
    39                                                           end
    40                                                       endtask
    41                                               
    42                                               
    43                                               
    44                                                   endclass //ALSU_if
    45                                               
    46                                                   
    47                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         2         1         1      50.0

================================Branch Details================================

Branch Coverage for file ALSU_monitor.sv --

------------------------------------IF Branch------------------------------------
    38                                     50000     Count coming in to IF
    38              1                    ***0***                      `uvm_info("run_phase",item.convert2string(),UVM_HIGH);
                                           50000     All False Count
Branch totals: 1 hit of 2 branches = 50.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File ALSU_monitor.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: ALSU_seq_item.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           25         4        21      16.0

================================Statement Details================================

Statement Coverage for file ALSU_seq_item.sv --

    1                                                package ALSU_seq_item_pkg;
    2                                                    import uvm_pkg::*;
    3                                                        `include "uvm_macros.svh"
    4                                                        import constant_enums::*;
    5                                                
    6                                                    class seq_item extends uvm_sequence_item;
    7               1                    ***0***             `uvm_object_utils(seq_item);
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                      50000     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                      50000     
    7              10                    ***0***     
    8                                                        rand bit  clk, rst, red_op_A, red_op_B, bypass_A, bypass_B, direction, serial_in;
    9                                                        rand logic cin;
    10                                                       rand Opcode_e  opcode;
    11                                                       rand bit signed [2:0] A, B;
    12                                                       bit signed [5:0] out;
    13                                                       bit [15:0] leds;
    14                                               
    15              1                     125002             bit [2:0] ones_number={3'b001,3'b010,3'b100};
    16                                                       rand bit [2:0] found,notfound;
    17                                                       rand corner_state_e a_state;
    18                                                       rand bit [2:0] rem_numbers;
    19                                                       rand Opcode_e arr[6];
    20                                                       function new(string name ="ALSU_seq_item");
    21              1                     125002                 super.new(name);
    22                                                       endfunction 
    23                                               
    24                                                       function string convert2string();
    25              1                    ***0***                 return $sformatf("%s  reset =%0b cin=%0b ,red_op_A=%0b ,red_op_B=%0b ,bypass_A=%0b ,bypass_B=%0b ,
    26                                                           direction=%0b ,serial_in=%0b ,opcode=%0b ,A=%0b,B=%0b ,out =%0b,leds=%0b ",
    27                                                           super.convert2string(),rst,cin,red_op_A,red_op_B,bypass_A,bypass_B,direction,serial_in,opcode,A,B,out,leds);            
    28                                                       endfunction
    29                                               
    30                                                       function string convert2string_stimulus();
    31              1                    ***0***                 return $sformatf("%s  reset =%0b cin=%0b ,red_op_A=%0b ,red_op_B=%0b ,bypass_A=%0b ,bypass_B=%0b ,
    32                                                           direction=%0b ,serial_in=%0b ,opcode=%0b ,A=%0b,B=%0b",
    33                                                           super.convert2string(),rst,cin,red_op_A,red_op_B,bypass_A,bypass_B,direction,serial_in,opcode,A,B);              
    34                                                       endfunction
    35                                               
    36                                                       constraint x {
    37                                                           rem_numbers!= MAXPOS||MAXNEG||ZERO;
    38                                                           rst dist {1:=5 , 0:=95};
    39                                                           opcode <= ROTATE;
    40                                                           found inside {ones_number};
    41                                                           !(notfound inside {ones_number});
    42                                               
    43                                                           if (opcode ==ADD || opcode== MULT){
    44                                                               A dist {a_state:=80,rem_numbers:=20};
    45                                                               B dist {a_state:=80,rem_numbers:=20};
    46                                                           }
    47                                                           if (opcode ==OR || opcode== XOR ){
    48                                                               if(red_op_A){
    49                                                                   A dist {found:=80,notfound:=20};
    50                                                                   B==3'b000;  
    51                                                               }
    52                                                               else if (red_op_B){
    53                                                                   B dist {found:=80,notfound:=20};
    54                                                                   A==3'b000;
    55                                                               }
    56                                                           }
    57                                               
    58                                               
    59                                                           opcode dist {[OR:ROTATE]:=80,[INVALID6:INVALID7]};
    60                                               
    61                                                           bypass_A dist {0:=90,1:=10};
    62                                                           bypass_B dist {0:=90,1:=10};
    63                                                       }
    64                                                       constraint y{
    65                                                           opcode <= ROTATE;
    66                                                           unique{arr};
    67                                                           foreach(arr[i])
    68                                                               arr[i] inside {[OR:ROTATE]};
    69                                                       }
    70                                                   endclass //ALSU_if
    71                                               
    72                                               
    73                                                   class alsu_seq_item_valid_invalid extends seq_item;
    74              1                    ***0***             `uvm_object_utils(alsu_seq_item_valid_invalid);
    74              2                    ***0***     
    74              3                    ***0***     
    74              4                    ***0***     
    74              5                    ***0***     
    74              6                    ***0***     
    74              7                    ***0***     
    74              8                    ***0***     
    74              9                    ***0***     
    74             10                    ***0***     
    75                                                    
    76                                                       function new(string name ="seq_item_extended");
    77              1                    ***0***                 super.new(name);
    78                                                       endfunction 
    79                                               
    80                                                       constraint x {
    81                                                           rem_numbers!= MAXPOS||MAXNEG||ZERO;
    82                                                           rst dist {1:=5 , 0:=95};
    83                                               
    84                                                           found inside {ones_number};
    85                                                           !(notfound inside {ones_number});
    86                                               
    87                                                           if (opcode ==ADD || opcode== MULT){
    88                                                               A dist {a_state:=80,rem_numbers:=20};
    89                                                               B dist {a_state:=80,rem_numbers:=20};
    90                                                           }
    91                                                           if (opcode ==OR || opcode== XOR ){
    92                                                               if(red_op_A){
    93                                                                   A dist {found:=80,notfound:=20};
    94                                                                   B==3'b000;  
    95                                                               }
    96                                                               else if (red_op_B){
    97                                                                   B dist {found:=80,notfound:=20};
    98                                                                   A==3'b000;
    99                                                               }
    100                                                          }
    101                                              
    102                                              
    103                                                          bypass_A dist {0:=90,1:=10};
    104                                                          bypass_B dist {0:=90,1:=10};
    105                                                      }
    106                                              
    107                                                      constraint y{
    108                                                          unique{arr};
    109                                                          foreach(arr[i])
    110                                                              arr[i] inside {[OR:ROTATE]};
    111                                                      }
    112                                                  endclass //ALSU_if
    113                                              
    114                                              
    115                                                  
    116                                              endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                        20         2        18      10.0

================================Branch Details================================

Branch Coverage for file ALSU_seq_item.sv --

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***             `uvm_object_utils(seq_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    7                                      50000     Count coming in to IF
    7               2                    ***0***             `uvm_object_utils(seq_item);
                                           50000     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***             `uvm_object_utils(seq_item);
    7               4                    ***0***             `uvm_object_utils(seq_item);
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    7                                      50000     Count coming in to IF
    7               5                    ***0***             `uvm_object_utils(seq_item);
                                           50000     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***             `uvm_object_utils(seq_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    74                                   ***0***     Count coming in to IF
    74              1                    ***0***             `uvm_object_utils(alsu_seq_item_valid_invalid);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    74                                   ***0***     Count coming in to IF
    74              2                    ***0***             `uvm_object_utils(alsu_seq_item_valid_invalid);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    74                                   ***0***     Count coming in to IF
    74              3                    ***0***             `uvm_object_utils(alsu_seq_item_valid_invalid);
    74              4                    ***0***             `uvm_object_utils(alsu_seq_item_valid_invalid);
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    74                                   ***0***     Count coming in to IF
    74              5                    ***0***             `uvm_object_utils(alsu_seq_item_valid_invalid);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    74                                   ***0***     Count coming in to IF
    74              6                    ***0***             `uvm_object_utils(alsu_seq_item_valid_invalid);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File ALSU_seq_item.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: ALSU_sequence.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           62        32        30      51.6

================================Statement Details================================

Statement Coverage for file ALSU_sequence.sv --

    1                                                package ALSU_sequence_pkg;
    2                                                    import uvm_pkg::*;
    3                                                        `include "uvm_macros.svh"
    4                                                    import ALSU_seq_item_pkg::*;
    5                                                
    6                                                    class reset_sequence extends uvm_sequence #(seq_item);
    7               1                    ***0***             `uvm_object_utils(reset_sequence);
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                    ***0***     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                    ***0***     
    7              10                    ***0***     
    8                                                
    9                                                        function new(string name ="reset_sequence");
    10              1                          1                 super.new(name);
    11                                                       endfunction 
    12                                               
    13                                                       task body();
    14                                                           seq_item item;
    15              1                    ***0***                 item=seq_item::type_id::create("sequence reset");
    16              1                    ***0***                 start_item(item);
    17              1                    ***0***                 item.rst=1;
    18              1                    ***0***                 finish_item(item);
    19                                                       endtask
    20                                                   endclass //ALSU_if
    21                                               
    22                                                   class main_sequence extends uvm_sequence #(seq_item);
    23              1                    ***0***             `uvm_object_utils(main_sequence);
    23              2                    ***0***     
    23              3                    ***0***     
    23              4                    ***0***     
    23              5                    ***0***     
    23              6                          1     
    23              7                    ***0***     
    23              8                    ***0***     
    23              9                          1     
    23             10                    ***0***     
    24                                               
    25                                                       function new(string name ="main_sequence",uvm_component parent=null);
    26              1                          1                 super.new(name);
    27                                                       endfunction 
    28                                               
    29                                                       task body();
    30                                                           
    31              1                      20000                 repeat(20000)begin
    32                                                               seq_item item;
    33              1                      20000                     item=seq_item::type_id::create("seq_item");
    34              1                      20000                     item.constraint_mode(0);
    35              1                      20000                     item.x.constraint_mode(1);
    36              1                      20000                     start_item(item);
    37                                                               assert(item.randomize());
    38              1                      20000                     finish_item(item);
    39                                                               
    40                                                           end
    41                                                       endtask
    42                                                   endclass //ALSU_if
    43                                               
    44                                                       class second_sequence extends uvm_sequence #(seq_item);
    45              1                    ***0***             `uvm_object_utils(second_sequence);
    45              2                    ***0***     
    45              3                    ***0***     
    45              4                    ***0***     
    45              5                    ***0***     
    45              6                          1     
    45              7                    ***0***     
    45              8                    ***0***     
    45              9                          1     
    45             10                    ***0***     
    46                                               
    47                                                       function new(string name ="second_sequence",uvm_component parent=null);
    48              1                          1                 super.new(name);
    49                                                       endfunction 
    50                                               
    51                                                       task body();
    52                                               
    53              1                          1                 for(int i=0;i<5000;i++)begin
    53              2                       5000     
    54                                                           seq_item item;
    55              1                       5000                 item=seq_item::type_id::create("seq_item");
    56              1                       5000                 item.constraint_mode(0);
    57              1                       5000                 item.y.constraint_mode(1);
    58                                                           //start_item(item);
    59              1                       5000                 item.rst=0;item.bypass_A=0;item.bypass_B=0;item.red_op_A=0;item.red_op_B=0;
    59              2                       5000     
    59              3                       5000     
    59              4                       5000     
    59              5                       5000     
    60              1                       5000                 item.rst.rand_mode(0);item.bypass_A.rand_mode(0);item.bypass_B.rand_mode(0);item.red_op_A.rand_mode(0);
    60              2                       5000     
    60              3                       5000     
    60              4                       5000     
    61              1                       5000                 item.red_op_B.rand_mode(0);          
    62                                                           assert(item.randomize());
    63                                                           //if('{OR,XOR,ADD,MULT,SHIFT,ROTATE} ==item.arr)$display("@%0t the wanted sequence is %p",$time,tr.arr);
    64              1                      35000                     foreach(item.arr[j])begin
    65              1                      30000                         start_item(item);
    66              1                      30000                         item.opcode=item.arr[j];
    67              1                      30000                         finish_item(item);
    68                                                               end
    69                                                           end
    70                                                           
    71                                                       endtask
    72                                                   endclass //ALSU_if
    73                                               
    74                                                   
    75                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                        30         4        26      13.3

================================Branch Details================================

Branch Coverage for file ALSU_sequence.sv --

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***             `uvm_object_utils(reset_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               2                    ***0***             `uvm_object_utils(reset_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***             `uvm_object_utils(reset_sequence);
    7               4                    ***0***             `uvm_object_utils(reset_sequence);
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               5                    ***0***             `uvm_object_utils(reset_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***             `uvm_object_utils(reset_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    23                                   ***0***     Count coming in to IF
    23              1                    ***0***             `uvm_object_utils(main_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    23                                         1     Count coming in to IF
    23              2                    ***0***             `uvm_object_utils(main_sequence);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    23                                   ***0***     Count coming in to IF
    23              3                    ***0***             `uvm_object_utils(main_sequence);
    23              4                    ***0***             `uvm_object_utils(main_sequence);
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    23                                         1     Count coming in to IF
    23              5                    ***0***             `uvm_object_utils(main_sequence);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    23                                   ***0***     Count coming in to IF
    23              6                    ***0***             `uvm_object_utils(main_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    45                                   ***0***     Count coming in to IF
    45              1                    ***0***             `uvm_object_utils(second_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    45                                         1     Count coming in to IF
    45              2                    ***0***             `uvm_object_utils(second_sequence);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    45                                   ***0***     Count coming in to IF
    45              3                    ***0***             `uvm_object_utils(second_sequence);
    45              4                    ***0***             `uvm_object_utils(second_sequence);
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    45                                         1     Count coming in to IF
    45              5                    ***0***             `uvm_object_utils(second_sequence);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    45                                   ***0***     Count coming in to IF
    45              6                    ***0***             `uvm_object_utils(second_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File ALSU_sequence.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: ALSU_sequencer.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                            4         2         2      50.0

================================Statement Details================================

Statement Coverage for file ALSU_sequencer.sv --

    1                                                package ALSU_sequencer_pkg;
    2                                                    import uvm_pkg::*;
    3                                                        `include "uvm_macros.svh"
    4                                                    import ALSU_seq_item_pkg::*;
    5                                                
    6                                                    class ALSU_sequencer extends uvm_sequencer #(seq_item);
    7               1                    ***0***             `uvm_component_utils(ALSU_sequencer);
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                        function new(string name ="sequencer",uvm_component parent=null);
    10              1                          1                 super.new(name,parent);
    11                                                       endfunction 
    12                                               
    13                                               
    14                                                   endclass //ALSU_if
    15                                               
    16                                                   
    17                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         0         0         0     100.0
Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File ALSU_sequencer.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: Shift_env.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           11         9         2      81.8

================================Statement Details================================

Statement Coverage for file Shift_env.sv --

    1                                                
    2                                                
    3                                                package shift_env_pkg;
    4                                                import uvm_pkg::*;
    5                                                `include "uvm_macros.svh"
    6                                                    import shift_scoreboard_pkg::*;
    7                                                    import shift_coverage_pkg::*;
    8                                                    import shift_agent_pkg::*;
    9                                                
    10                                                   class shit_reg_env extends uvm_component ;
    11              1                    ***0***             `uvm_component_utils(shit_reg_env);
    11              2                    ***0***     
    11              3                          2     
    12                                                       shift_reg_sb sb;
    13                                                       shift_reg_cov cov;
    14                                                       shift_reg_agent agent;
    15                                               
    16                                                       function new(string name = "shift_reg_env", uvm_component parent =null);
    17              1                          1                 super.new(name,parent);
    18                                                       endfunction
    19                                               
    20                                                       function void build_phase(uvm_phase phase);        
    21              1                          1                 super.build_phase(phase);
    22              1                          1                 sb=shift_reg_sb::type_id::create("scoreboard",this);
    23              1                          1                 cov=shift_reg_cov::type_id::create("coverage collector",this);
    24              1                          1                 agent=shift_reg_agent::type_id::create("Agent",this);
    25                                                       endfunction
    26                                               
    27                                                       function void connect_phase(uvm_phase phase);
    28              1                          1                 super.connect_phase(phase);
    29              1                          1                 agent.agt_p.connect(sb.sb_export);
    30              1                          1                 agent.agt_p.connect(cov.cov_export);
    31                                                       endfunction
    32                                                   endclass
    33                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         0         0         0     100.0
Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File Shift_env.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: _Assertions.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                            2         2         0     100.0

================================Statement Details================================

Statement Coverage for file _Assertions.sv --

    1                                                module Asseritions(ALSU_if if_t);
    2                                                bit invalid;
    3                                                import constant_enums::*;
    4                                                
    5               1                      48103     assign invalid=(if_t.opcode==INVALID6 || if_t.opcode==INVALID7) || ((if_t.opcode>3'b001) && (if_t.red_op_A|if_t.red_op_B));
    6                                                
    7               1                      44536     always_comb begin 
    8                                                    if(if_t.rst)begin
    9                                                        rst_check:assert final(if_t.out==0 && if_t.leds==0);
    10                                                   end 
    11                                               end
    12                                               
    13                                               property leds;
    14                                               @(posedge if_t.clk) disable iff( if_t.rst ) (invalid) |=> ##1 if_t.leds == ~ $past(if_t.leds) ;
    15                                               endproperty
    16                                               
    17                                               property rst_n;
    18                                               @(posedge if_t.clk) disable iff( if_t.rst ) (invalid) |=> ##1 ( if_t.out ==0 );
    19                                               endproperty
    20                                               
    21                                               // BYPASS CHECK
    22                                               property bypass1;
    23                                                 @(posedge if_t.clk) disable iff(if_t.rst)
    24                                                   (if_t.bypass_A && if_t.bypass_B && if_t.INPUT_PRIORITY == "A") |=> ##1 if_t.out == $past(if_t.A, 2) ;
    25                                               endproperty
    26                                               
    27                                               property bypass2;
    28                                                 @(posedge if_t.clk) disable iff(if_t.rst)
    29                                                     (if_t.bypass_A && if_t.bypass_B && if_t.INPUT_PRIORITY == "B") |=> ##1 if_t.out == $past(if_t.B, 2) ;
    30                                               endproperty
    31                                               
    32                                               property bypass3;
    33                                                 @(posedge if_t.clk) disable iff(if_t.rst)
    34                                                   (if_t.bypass_A && !if_t.bypass_B) |=> ##1 if_t.out == $past(if_t.A, 2)  ;
    35                                               endproperty
    36                                               
    37                                               property bypass4;
    38                                                 @(posedge if_t.clk) disable iff(if_t.rst)
    39                                                   (!if_t.bypass_A && if_t.bypass_B) |=> ##1 if_t.out == $past(if_t.B, 2) ;
    40                                               endproperty
    41                                               
    42                                               //------------INVALID CHECK-----------------------//
    43                                               
    44                                               property INVALID_ch;
    45                                               @(posedge if_t.clk) disable iff(if_t.rst) 
    46                                                   (!if_t.bypass_A && !if_t.bypass_B && invalid  ) |=> ##1
    47                                                     (if_t.out == 0 ) ;
    48                                               endproperty
    49                                               
    50                                               //--------------------------------------------//
    51                                               
    52                                               //--------------------------------------------//
    53                                               
    54                                               
    55                                               //------------OR CHECK-----------------------//
    56                                               
    57                                               property OR_RedOp_1;
    58                                               @(posedge if_t.clk) disable iff(if_t.rst) 
    59                                                   (!if_t.bypass_A && !if_t.bypass_B && !invalid && if_t.opcode==OR && if_t.red_op_A &&if_t. red_op_B && if_t.INPUT_PRIORITY == "A") |=> ##1
    60                                                     (if_t.out == |$past(if_t.A, 2)) ;
    61                                               endproperty
    62                                               
    63                                               property OR_RedOp_2;
    64                                               @(posedge if_t.clk) disable iff(if_t.rst) 
    65                                                   (!if_t.bypass_A && !if_t.bypass_B && !invalid && if_t.opcode==OR && if_t.red_op_A && if_t.red_op_B && if_t.INPUT_PRIORITY == "B") |=> ##1
    66                                                     (if_t.out == |$past(if_t.B, 2)) ;
    67                                               endproperty
    68                                               
    69                                               property OR_RedOp_3;
    70                                               @(posedge if_t.clk) disable iff(if_t.rst) 
    71                                                   (!if_t.bypass_A && !if_t.bypass_B && !invalid && if_t.opcode==OR && if_t.red_op_A && !if_t.red_op_B) |=> ##1
    72                                                     (if_t.out == |$past(if_t.A, 2)) ;
    73                                               endproperty
    74                                               
    75                                               property OR_RedOp_4;
    76                                               @(posedge if_t.clk) disable iff(if_t.rst) 
    77                                                   (!if_t.bypass_A && !if_t.bypass_B && !invalid && if_t.opcode==OR && !if_t.red_op_A && if_t.red_op_B ) |=> ##1
    78                                                     (if_t.out == |$past(if_t.B, 2)) ;
    79                                               endproperty
    80                                               
    81                                               property OR_check;
    82                                               @(posedge if_t.clk) disable iff(if_t.rst) 
    83                                                   (!if_t.bypass_A && !if_t.bypass_B && !invalid && if_t.opcode==OR && !if_t.red_op_A && !if_t.red_op_B ) |=> ##1
    84                                                     (if_t.out == $past(if_t.A, 2) | $past(if_t.B, 2)) ;
    85                                               endproperty
    86                                               
    87                                               //--------------------------------------------//
    88                                               
    89                                               
    90                                               //------------XOR CHECK-----------------------//
    91                                               
    92                                               property XOR_RedOp_1;
    93                                               @(posedge if_t.clk) disable iff(if_t.rst) 
    94                                                   (!if_t.bypass_A && !if_t.bypass_B && !invalid && if_t.opcode==XOR && if_t.red_op_A &&if_t. red_op_B && if_t.INPUT_PRIORITY == "A") |=> ##1
    95                                                     (if_t.out == ^$past(if_t.A, 2)) ;
    96                                               endproperty
    97                                               
    98                                               property XOR_RedOp_2;
    99                                               @(posedge if_t.clk) disable iff(if_t.rst) 
    100                                                  (!if_t.bypass_A && !if_t.bypass_B && !invalid && if_t.opcode==XOR && if_t.red_op_A && if_t.red_op_B && if_t.INPUT_PRIORITY == "B") |=> ##1
    101                                                    (if_t.out == ^$past(if_t.B, 2)) ;
    102                                              endproperty
    103                                              
    104                                              property XOR_RedOp_3;
    105                                              @(posedge if_t.clk) disable iff(if_t.rst) 
    106                                                  (!if_t.bypass_A && !if_t.bypass_B && !invalid && if_t.opcode==XOR && if_t.red_op_A && !if_t.red_op_B) |=> ##1
    107                                                    (if_t.out == ^$past(if_t.A, 2)) ;
    108                                              endproperty
    109                                              
    110                                              property XOR_RedOp_4;
    111                                              @(posedge if_t.clk) disable iff(if_t.rst) 
    112                                                  (!if_t.bypass_A && !if_t.bypass_B && !invalid && if_t.opcode==XOR && !if_t.red_op_A && if_t.red_op_B ) |=> ##1
    113                                                    (if_t.out == ^$past(if_t.B, 2)) ;
    114                                              endproperty
    115                                              
    116                                              property XOR_check;
    117                                              @(posedge if_t.clk) disable iff(if_t.rst) 
    118                                                  (!if_t.bypass_A && !if_t.bypass_B && !invalid && if_t.opcode==XOR && !if_t.red_op_A && !if_t.red_op_B ) |=> ##1
    119                                                    (if_t.out == $past(if_t.A, 2) ^ $past(if_t.B, 2)) ;
    120                                              endproperty
    121                                              
    122                                              //--------------------------------------------//
    123                                              
    124                                              
    125                                              //------------ADD CHECK-----------------------//
    126                                              
    127                                              property fullAdd;
    128                                              @(posedge if_t.clk) disable iff(if_t.rst) 
    129                                                  (!if_t.bypass_A && !if_t.bypass_B && !invalid && if_t.opcode==ADD && if_t.FULL_ADDER == "ON") |=> ##1
    130                                                    (if_t.out == $past(if_t.A, 2) + $past(if_t.B, 2) + $past(if_t.cin, 2)) ;
    131                                              endproperty
    132                                              
    133                                              property halfAdd;
    134                                              @(posedge if_t.clk) disable iff(if_t.rst) 
    135                                                  (!if_t.bypass_A && !if_t.bypass_B && !invalid && if_t.opcode==ADD && if_t.FULL_ADDER == "OFF") |=> ##1
    136                                                    (if_t.out == $past(if_t.A, 2) + $past(if_t.B, 2) ) ;
    137                                              endproperty
    138                                              
    139                                              //--------------------------------------------//
    140                                              
    141                                              
    142                                              //------------multiply CHECK-----------------------//
    143                                              
    144                                              property multiply;
    145                                              @(posedge if_t.clk) disable iff(if_t.rst) 
    146                                                  (!if_t.bypass_A && !if_t.bypass_B && !invalid && if_t.opcode==MULT ) |=> ##1
    147                                                    (if_t.out == $past(if_t.A, 2) * $past(if_t.B, 2) ) ;
    148                                              endproperty
    149                                              
    150                                              //--------------------------------------------//
    151                                              
    152                                              
    153                                              //------------shift CHECK-----------------------//
    154                                              
    155                                              property shift_right;
    156                                              @(posedge if_t.clk) disable iff(if_t.rst) 
    157                                                  (!if_t.bypass_A && !if_t.bypass_B && !invalid && if_t.opcode==SHIFT && if_t.direction==0 ) |=> ##1
    158                                                      (if_t.out =={ $past(if_t.serial_in,2) , $past(if_t.out[5:1]) } ) ;
    159                                              endproperty
    160                                              
    161                                              property shift_left;
    162                                              @(posedge if_t.clk) disable iff(if_t.rst) 
    163                                                  (!if_t.bypass_A && !if_t.bypass_B && !invalid && if_t.opcode==SHIFT && if_t.direction==1 ) |=> ##1
    164                                                      (if_t.out =={$past(if_t.out[4:0]) , $past(if_t.serial_in,2) } ) ;
    165                                              endproperty
    166                                              
    167                                              //--------------------------------------------//
    168                                              
    169                                              //------------Rotate CHECK-----------------------//
    170                                              
    171                                              property rotate_right;
    172                                              @(posedge if_t.clk) disable iff(if_t.rst) 
    173                                                  (!if_t.bypass_A && !if_t.bypass_B && !invalid && if_t.opcode==ROTATE && if_t.direction==0 ) |=> ##1
    174                                                      (if_t.out =={$past(if_t.out[0]) , $past(if_t.out[5:1]) } ) ;
    175                                              endproperty
    176                                              
    177                                              property rotate_left;
    178                                              @(posedge if_t.clk) disable iff(if_t.rst) 
    179                                                  (!if_t.bypass_A && !if_t.bypass_B && !invalid && if_t.opcode==ROTATE && if_t.direction==1 ) |=> ##1
    180                                                      (if_t.out =={$past(if_t.out[4:0]) , $past(if_t.out[5])} ) ;
    181                                              endproperty
    182                                              
    183                                              //--------------------------------------------//
    184                                              
    185                                              leds_check:assert property(leds);
    186                                              // bypass assertions 
    187                                              bypass1_check:assert property(bypass1);
    188                                              bypass2_check:assert property(bypass2);
    189                                              bypass3_check:assert property(bypass3);
    190                                              bypass4_check:assert property(bypass4);
    191                                              
    192                                              // bypass assertions 
    193                                              INVALID_check:assert property(INVALID_ch);
    194                                              
    195                                              // Opcode assertions 
    196                                              
    197                                              //---------------------------------------//
    198                                              //OR CHECK
    199                                              OR1_check:assert property(OR_RedOp_1);
    200                                              OR2_check:assert property(OR_RedOp_2);
    201                                              OR3_check:assert property(OR_RedOp_3);
    202                                              OR4_check:assert property(OR_RedOp_4);
    203                                              OR5_check:assert property(OR_check);
    204                                              
    205                                              //---------------------------------------//
    206                                              //XOR CHECK
    207                                              XOR1_check:assert property(XOR_RedOp_1);
    208                                              XOR2_check:assert property(XOR_RedOp_2);
    209                                              XOR3_check:assert property(XOR_RedOp_3);
    210                                              XOR4_check:assert property(XOR_RedOp_4);
    211                                              XOR5_check:assert property(XOR_check);
    212                                              
    213                                              //---------------------------------------//
    214                                              //ADD CHECK
    215                                              FullADD_check:assert property(fullAdd)else $display("A=%0d B=%0d cin=%0d and out=%0d ",$past(if_t.A, 2) , $past(if_t.B, 2) , $past(if_t.cin, 2),($past(if_t.A, 2) + $past(if_t.B, 2)+$past(if_t.cin, 2)));;
    216                                              halfADD_check:assert property(halfAdd);
    217                                              
    218                                              //---------------------------------------//
    219                                              //Multiply CHECK
    220                                              MULT_check:assert property(multiply);
    221                                              
    222                                              //---------------------------------------//
    223                                              //shift CHECK
    224                                              shift_R_check:assert property(shift_right) ;
    225                                              shift_L_check:assert property(shift_left);
    226                                              
    227                                              //---------------------------------------//
    228                                              //shift CHECK
    229                                              rotate_R_check:assert property(rotate_right);
    230                                              rotate_L_check:assert property(rotate_left);
    231                                              
    232                                              
    233                                              
    234                                              //-----------------------------------cover----------------------------------------//
    235                                              leds_cover:cover property(leds);
    236                                              
    237                                              
    238                                              //bypass cover
    239                                              bypass1_cover:cover property(bypass1);
    240                                              bypass2_cover:cover property(bypass2);
    241                                              bypass3_cover:cover property(bypass3);
    242                                              bypass4_cover:cover property(bypass4);
    243                                              
    244                                              //INVALID cover
    245                                              INVALID_cover:cover property(INVALID_ch);
    246                                              
    247                                              //opcode cover OR
    248                                              OR1_cover:cover property(OR_RedOp_1);
    249                                              OR2_cover:cover property(OR_RedOp_2);
    250                                              OR3_cover:cover property(OR_RedOp_3);
    251                                              OR4_cover:cover property(OR_RedOp_4);
    252                                              OR5_cover:cover property(OR_check);
    253                                              
    254                                              //opcode cover XOR
    255                                              XOR1_cover:cover property(XOR_RedOp_1);
    256                                              XOR2_cover:cover property(XOR_RedOp_2);
    257                                              XOR3_cover:cover property(XOR_RedOp_3);
    258                                              XOR4_cover:cover property(XOR_RedOp_4);
    259                                              XOR5_cover:cover property(XOR_check);
    260                                              
    261                                              //opcode cover ADD
    262                                              FullADD_cover:cover property(fullAdd);
    263                                              halfADD_cover:cover property(halfAdd);
    264                                              
    265                                              //opcode cover mult
    266                                              Mult_cover:cover property(multiply);
    267                                              
    268                                              //opcode cover shift
    269                                              shiftL_cover:cover property(shift_left);
    270                                              shiftR_cover:cover property(shift_right);
    271                                              
    272                                              //opcode cover rotate
    273                                              rotateLeft_cover:cover property(rotate_left);
    274                                              rotateRight_cover:cover property(rotate_right);
    275                                              
    276                                              // -----------------------------------end cover-------------------------------------//
    277                                              endmodule

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         2         2         0     100.0

================================Branch Details================================

Branch Coverage for file _Assertions.sv --

------------------------------------IF Branch------------------------------------
    8                                      44536     Count coming in to IF
    8               1                       1527         if(if_t.rst)begin
                                           43009     All False Count
Branch totals: 2 hits of 2 branches = 100.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             5         3         2      60.0

================================Expression Details================================

Expression Coverage for file _Assertions.sv --

----------------Focused Expression View-----------------
Line       5 Item    1  (((if_t.opcode == INVALID6) || (if_t.opcode == INVALID7)) || ((if_t.opcode > 1) && (if_t.red_op_A | if_t.red_op_B)))
Expression totals: 3 of 5 input terms covered = 60.0%

                 Input Term   Covered  Reason for no coverage   Hint
                -----------  --------  -----------------------  --------------
  (if_t.opcode == INVALID6)         N  '_1' not hit             Hit '_1'
  (if_t.opcode == INVALID7)         N  '_1' not hit             Hit '_1'
          (if_t.opcode > 1)         Y
              if_t.red_op_A         Y
              if_t.red_op_B         Y

     Rows:       Hits  FEC Target                   Non-masking condition(s)      
 ---------  ---------  --------------------         -------------------------     
  Row   1:          1  (if_t.opcode == INVALID6)_0  (~((if_t.opcode > 1) && (if_t.red_op_A | if_t.red_op_B)) && ~(if_t.opcode == INVALID7))
  Row   2:    ***0***  (if_t.opcode == INVALID6)_1  -                             
  Row   3:          1  (if_t.opcode == INVALID7)_0  (~((if_t.opcode > 1) && (if_t.red_op_A | if_t.red_op_B)) && ~(if_t.opcode == INVALID6))
  Row   4:    ***0***  (if_t.opcode == INVALID7)_1  ~(if_t.opcode == INVALID6)    
  Row   5:          1  (if_t.opcode > 1)_0          ~((if_t.opcode == INVALID6) || (if_t.opcode == INVALID7))
  Row   6:          1  (if_t.opcode > 1)_1          (~((if_t.opcode == INVALID6) || (if_t.opcode == INVALID7)) && (if_t.red_op_A | if_t.red_op_B))
  Row   7:          1  if_t.red_op_A_0              (~((if_t.opcode == INVALID6) || (if_t.opcode == INVALID7)) && (if_t.opcode > 1) && ~if_t.red_op_B)
  Row   8:          1  if_t.red_op_A_1              (~((if_t.opcode == INVALID6) || (if_t.opcode == INVALID7)) && (if_t.opcode > 1) && ~if_t.red_op_B)
  Row   9:          1  if_t.red_op_B_0              (~((if_t.opcode == INVALID6) || (if_t.opcode == INVALID7)) && (if_t.opcode > 1) && ~if_t.red_op_A)
 Row   10:          1  if_t.red_op_B_1              (~((if_t.opcode == INVALID6) || (if_t.opcode == INVALID7)) && (if_t.opcode > 1) && ~if_t.red_op_A)


FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      2         2         0     100.0

================================Toggle Details================================

Toggle Coverage for File _Assertions.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------
          2                                invalid           1           1                              100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (2 of 2 bins)

=================================================================================
=== File: config_object.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           11         1        10       9.0

================================Statement Details================================

Statement Coverage for file config_object.sv --

    1                                                package config_object_pkg;
    2                                                    import uvm_pkg::*;
    3                                                        `include "uvm_macros.svh"
    4                                                        
    5                                                
    6                                                    class ALSU_config extends uvm_object ;
    7               1                    ***0***             `uvm_object_utils(ALSU_config);
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                    ***0***     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                    ***0***     
    7              10                    ***0***     
    8                                                        virtual shift_reg_if sif;
    9                                                        virtual ALSU_if vif;
    10                                                       uvm_active_passive_enum is_active;
    11                                                       
    12                                                       function new(string name ="configurtion object");
    13              1                          2                 super.new(name);
    14                                                       endfunction 
    15                                               
    16                                               
    17                                                   endclass //ALSU_if
    18                                               
    19                                                   
    20                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                        10         0        10       0.0

================================Branch Details================================

Branch Coverage for file config_object.sv --

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***             `uvm_object_utils(ALSU_config);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               2                    ***0***             `uvm_object_utils(ALSU_config);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***             `uvm_object_utils(ALSU_config);
    7               4                    ***0***             `uvm_object_utils(ALSU_config);
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               5                    ***0***             `uvm_object_utils(ALSU_config);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***             `uvm_object_utils(ALSU_config);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File config_object.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: shift_agent.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           16         9         7      56.2

================================Statement Details================================

Statement Coverage for file shift_agent.sv --

    1                                                package shift_agent_pkg;
    2                                                
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                import shift_monitor_pkg::*;
    6                                                import shift_driver_pkg::*;
    7                                                import shift_sequencer_pkg::*;
    8                                                import config_object_pkg::*;
    9                                                import shift_seq_item_pkg::*;
    10                                               
    11                                                   class shift_reg_agent extends uvm_agent;
    12              1                    ***0***             `uvm_component_utils(shift_reg_agent);
    12              2                    ***0***     
    12              3                          2     
    13                                                       shift_reg_monitor mon;
    14                                                       shift_reg_sequencer sqr;
    15                                                       shift_reg_driver drv;
    16                                                       uvm_analysis_port #(shift_seq_item) agt_p;
    17                                                       ALSU_config cfg;
    18                                                       uvm_active_passive_enum is_active;
    19                                                       function new(string name = "shift_reg_agent", uvm_component parent =null);
    20              1                          1                 super.new(name,parent);
    21                                                       endfunction
    22                                               
    23                                                       function void build_phase(uvm_phase phase);
    24              1                          1                 super.build_phase(phase);
    25              1                          1                 mon=shift_reg_monitor::type_id::create("monitor",this);
    26              1                          1                 agt_p=new("agent_port",this);
    27                                                           if(!uvm_config_db #(ALSU_config)::get(this,"","shift_cfg",cfg))
    28              1                    ***0***                     `uvm_fatal("build_phase","cant get shift virtual interface");
    29              1                          1                 is_active=cfg.is_active;
    30                                                           if(is_active==UVM_ACTIVE)begin
    31              1                    ***0***                     sqr=shift_reg_sequencer::type_id::create("driver",this);
    32              1                    ***0***                     drv=shift_reg_driver::type_id::create("sequencer",this);                
    33                                                           end
    34                                                           
    35                                                       endfunction
    36                                               
    37                                                       function void connect_phase(uvm_phase phase);  
    38              1                          1                 super.connect_phase(phase);
    39              1                          1                 mon.mon_p.connect(agt_p);
    40              1                          1                 mon.vif=cfg.sif; 
    41                                                           if(is_active==UVM_ACTIVE)begin
    42              1                    ***0***                     drv.seq_item_port.connect(sqr.seq_item_export);
    43              1                    ***0***                     drv.vif=cfg.sif;           
    44                                                           end
    45                                                       endfunction
    46                                                       
    47                                               
    48                                                   endclass
    49                                               
    50                                               
    51                                               
    52                                               
    53                                               
    54                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         8         3         5      37.5

================================Branch Details================================

Branch Coverage for file shift_agent.sv --

------------------------------------IF Branch------------------------------------
    27                                         1     Count coming in to IF
    27              1                    ***0***                 if(!uvm_config_db #(ALSU_config)::get(this,"","shift_cfg",cfg))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    28                                   ***0***     Count coming in to IF
    28              1                    ***0***                     `uvm_fatal("build_phase","cant get shift virtual interface");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    30                                         1     Count coming in to IF
    30              1                    ***0***                 if(is_active==UVM_ACTIVE)begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    41                                         1     Count coming in to IF
    41              1                    ***0***                 if(is_active==UVM_ACTIVE)begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File shift_agent.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: shift_coverage.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           14        12         2      85.7

================================Statement Details================================

Statement Coverage for file shift_coverage.sv --

    1                                                package shift_coverage_pkg;
    2                                                
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                import shift_seq_item_pkg::*;
    6                                                
    7                                                    class shift_reg_cov extends uvm_component;
    8               1                    ***0***             `uvm_component_utils(shift_reg_cov);
    8               2                    ***0***     
    8               3                          2     
    9                                                
    10                                                       shift_seq_item itm;
    11                                                       uvm_analysis_export #(shift_seq_item) cov_export;
    12                                                       uvm_tlm_analysis_fifo #(shift_seq_item) cov_fifo;
    13                                               
    14                                                       //covergorup
    15                                                       covergroup covgup;
    16                                                           data_in:coverpoint itm.datain  ;
    17                                                           MODE:coverpoint itm.mode {
    18                                                               bins mode0={0};
    19                                                               bins mode1={1};
    20                                                           }
    21                                                           direction:coverpoint itm.direction{
    22                                                               bins direction0={0};
    23                                                               bins direction1={1};
    24                                                           }
    25                                                       endgroup
    26                                               
    27                                                       function new(string name = "shift_reg_cov", uvm_component parent =null);
    28              1                          1                 super.new(name,parent);
    29              1                          1                 covgup=new();
    30                                                       endfunction
    31                                               
    32                                                       function void build_phase(uvm_phase phase);
    33              1                          1                 super.build_phase(phase);
    34              1                          1                 cov_export=new("cov_export",this);
    35              1                          1                 cov_fifo=new("cov_fifo",this);
    36                                                       endfunction
    37                                               
    38                                                       function void connect_phase(uvm_phase phase);  
    39              1                          1                 super.connect_phase(phase);
    40              1                          1                 cov_export.connect(cov_fifo.analysis_export);
    41                                                       endfunction  
    42                                               
    43                                                       task run_phase(uvm_phase phase);  
    44              1                          1                 super.run_phase(phase);
    45              1                          1                 forever begin
    46              1                      83334                     cov_fifo.get(itm);
    47                                                               //`uvm_info("run_phase",itm.convert2string(),UVM_MEDIUM);
    48              1                      83333                     covgup.sample();
    49                                                           end
    50                                                       endtask      
    51                                                 
    52                                                   endclass
    53                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         0         0         0     100.0
Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File shift_coverage.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: shift_driver.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           15         0        15       0.0

================================Statement Details================================

Statement Coverage for file shift_driver.sv --

    1                                                package shift_driver_pkg;
    2                                                
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                import shift_seq_item_pkg::*;
    6                                                
    7                                                    class shift_reg_driver extends uvm_driver #(shift_seq_item);
    8               1                    ***0***             `uvm_component_utils(shift_reg_driver);
    8               2                    ***0***     
    8               3                    ***0***     
    9                                                        virtual shift_reg_if vif;
    10                                                       shift_seq_item itm;
    11                                               
    12                                                       function new(string name = "shift_reg_driver", uvm_component parent =null);
    13              1                    ***0***                 super.new(name,parent);
    14                                                       endfunction
    15                                               
    16                                                       task run_phase(uvm_phase phase);
    17              1                    ***0***                 super.run_phase(phase);
    18                                               
    19              1                    ***0***                 forever begin
    20              1                    ***0***                     itm=shift_seq_item::type_id::create("item_send");
    21              1                    ***0***                     seq_item_port.get_next_item(itm);
    22              1                    ***0***                     vif.serial_in=itm.serial_in;
    23              1                    ***0***                     vif.direction=itm.direction;
    24              1                    ***0***                     vif.mode=itm.mode;
    25              1                    ***0***                     vif.datain=itm.datain;
    26              1                    ***0***                     #2;
    27                                               
    28              1                    ***0***                     seq_item_port.item_done();
    29              1                    ***0***                     `uvm_info("run_phase",itm.convert2string(),UVM_HIGH);
    30                                               
    31                                                           end
    32                                                       endtask
    33                                                   endclass
    34                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         2         0         2       0.0

================================Branch Details================================

Branch Coverage for file shift_driver.sv --

------------------------------------IF Branch------------------------------------
    29                                   ***0***     Count coming in to IF
    29              1                    ***0***                     `uvm_info("run_phase",itm.convert2string(),UVM_HIGH);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File shift_driver.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: shift_monitor.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           16        13         3      81.2

================================Statement Details================================

Statement Coverage for file shift_monitor.sv --

    1                                                package shift_monitor_pkg;
    2                                                
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                import shift_seq_item_pkg::*;
    6                                                
    7                                                    class shift_reg_monitor extends uvm_monitor;
    8               1                    ***0***             `uvm_component_utils(shift_reg_monitor);
    8               2                    ***0***     
    8               3                          2     
    9                                                        virtual shift_reg_if vif;
    10                                                       shift_seq_item itm;
    11                                                       uvm_analysis_port #(shift_seq_item) mon_p;
    12                                                       
    13                                                       function new(string name = "shift_reg_monitor", uvm_component parent =null);
    14              1                          1                 super.new(name,parent);
    15                                                       endfunction
    16                                               
    17                                                       function void build_phase(uvm_phase phase);
    18              1                          1                 super.build_phase(phase);
    19              1                          1                 mon_p=new("shift monitor port",this);
    20                                                       endfunction
    21                                               
    22                                                       task run_phase(uvm_phase phase);
    23              1                          1                 super.run_phase(phase);
    24              1                          1                 forever begin
    25              1                      83334                     itm=shift_seq_item::type_id::create("items recived");
    26              1                      83334                     #6;
    27              1                      83333                     itm.serial_in=vif.serial_in;
    28              1                      83333                     itm.direction=vif.direction;
    29              1                      83333                     itm.mode=vif.mode;
    30              1                      83333                     itm.datain=vif.datain;
    31              1                      83333                     mon_p.write(itm);
    32              1                    ***0***                      `uvm_info("run_phase",itm.convert2string(),UVM_HIGH);
    33                                                           end
    34                                                       endtask
    35                                                   endclass
    36                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         2         1         1      50.0

================================Branch Details================================

Branch Coverage for file shift_monitor.sv --

------------------------------------IF Branch------------------------------------
    32                                     83333     Count coming in to IF
    32              1                    ***0***                      `uvm_info("run_phase",itm.convert2string(),UVM_HIGH);
                                           83333     All False Count
Branch totals: 1 hit of 2 branches = 50.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File shift_monitor.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: shift_reg.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                            5         5         0     100.0

================================Statement Details================================

Statement Coverage for file shift_reg.sv --

    1                                                ////////////////////////////////////////////////////////////////////////////////
    2                                                // Author: Kareem Waseem
    3                                                // Course: Digital Verification using SV & UVM
    4                                                //
    5                                                // Description: Shift register Design 
    6                                                // 
    7                                                ////////////////////////////////////////////////////////////////////////////////
    8                                                module shift_reg (shift_reg_if if_t);
    9                                                
    10                                               
    11              1                          1     always @(*) begin
    12                                               
    13                                                     if (if_t.mode) // rotate
    14                                                        if (if_t.direction) // left
    15              1                      11492                 if_t.dataout = {if_t.datain[4:0], if_t.datain[5]};
    16                                                        else
    17              1                      11742                 if_t.dataout = {if_t.datain[0], if_t.datain[5:1]};
    18                                                     else // shift
    19                                                        if (if_t.direction) // left
    20              1                      11567                 if_t.dataout = {if_t.datain[4:0], if_t.serial_in};
    21                                                        else
    22              1                      12421                 if_t.dataout = {if_t.serial_in, if_t.datain[5:1]};
    23                                               end
    24                                               endmodule

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         5         5         0     100.0

================================Branch Details================================

Branch Coverage for file shift_reg.sv --

------------------------------------IF Branch------------------------------------
    13                                     47222     Count coming in to IF
    13              1                      23234           if (if_t.mode) // rotate
    19              1                      11567              if (if_t.direction) // left
    21              1                      12421              else
Branch totals: 3 hits of 3 branches = 100.0%

------------------------------------IF Branch------------------------------------
    14                                     23234     Count coming in to IF
    14              1                      11492              if (if_t.direction) // left
    16              1                      11742              else
Branch totals: 2 hits of 2 branches = 100.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File shift_reg.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: shift_reg_if.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                            0         0         0     100.0
Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         0         0         0     100.0
Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                     30        30         0     100.0

================================Toggle Details================================

Toggle Coverage for File shift_reg_if.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------
          3                              serial_in           1           1                              100.00 
          3                                   mode           1           1                              100.00 
          3                              direction           1           1                              100.00 
          4                             dataout[5]           1           1                              100.00 
          4                             dataout[4]           1           1                              100.00 
          4                             dataout[3]           1           1                              100.00 
          4                             dataout[2]           1           1                              100.00 
          4                             dataout[1]           1           1                              100.00 
          4                             dataout[0]           1           1                              100.00 
          4                              datain[5]           1           1                              100.00 
          4                              datain[4]           1           1                              100.00 
          4                              datain[3]           1           1                              100.00 
          4                              datain[2]           1           1                              100.00 
          4                              datain[1]           1           1                              100.00 
          4                              datain[0]           1           1                              100.00 

Total Node Count     =         15 
Toggled Node Count   =         15 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (30 of 30 bins)

=================================================================================
=== File: shift_scoreboard.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           22        18         4      81.8

================================Statement Details================================

Statement Coverage for file shift_scoreboard.sv --

    1                                                package shift_scoreboard_pkg;
    2                                                
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                import shift_seq_item_pkg::*;
    6                                                
    7                                                    class shift_reg_sb extends uvm_scoreboard;
    8               1                    ***0***             `uvm_component_utils(shift_reg_sb);
    8               2                    ***0***     
    8               3                          2     
    9                                                
    10                                                       shift_seq_item itm;
    11                                                       logic [5:0] dataout_ref;
    12                                                       int error,correct;
    13                                                       uvm_analysis_export #(shift_seq_item) sb_export;
    14                                                       uvm_tlm_analysis_fifo #(shift_seq_item) sb_fifo;
    15                                                       function new(string name = "shift_reg_sb", uvm_component parent =null);
    16              1                          1                 super.new(name,parent);
    17                                                       endfunction
    18                                               
    19                                                       function void build_phase(uvm_phase phase);
    20              1                          1                 super.build_phase(phase);
    21              1                          1                 sb_export=new("sb_export",this);
    22              1                          1                 sb_fifo=new("sb_fifo",this);
    23                                                       endfunction
    24                                               
    25                                                       function void connect_phase(uvm_phase phase);  
    26              1                          1                 super.connect_phase(phase);
    27              1                          1                 sb_export.connect(sb_fifo.analysis_export);
    28                                                       endfunction
    29                                               
    30                                                       task run_phase(uvm_phase phase);
    31              1                          1                 super.run_phase(phase);
    32              1                          1                 forever begin
    33              1                      83334                     sb_fifo.get(itm);
    34              1                      83333                     refrence_model(itm);
    35                                                               if(itm.dataout != dataout_ref)begin
    36              1                    ***0***                         `uvm_error("run_phase",$sformatf("Trascaion recieved is %s and data_out ref =%0d",itm.convert2string(),dataout_ref));
    37              1                    ***0***                         error++;
    38                                                               end
    39              1                      83333                     else correct++;
    40                                                           end
    41                                                       endtask
    42                                               
    43                                                       task refrence_model(shift_seq_item itms);
    44                                                               if (itms.mode) // rotate
    45                                                                   if (itms.direction) // left
    46              1                      20035                             dataout_ref = {itms.datain[4:0], itms.datain[5]};
    47                                                                   else
    48              1                      20600                             dataout_ref = {itms.datain[0], itms.datain[5:1]};
    49                                                               else // shift
    50                                                                   if (itms.direction) // left
    51              1                      20116                             dataout_ref = {itms.datain[4:0], itms.serial_in};
    52                                                                   else
    53              1                      22582                             dataout_ref = {itms.serial_in, itms.datain[5:1]};
    54                                               
    55                                                       endtask
    56                                               
    57                                                       function void report_phase (uvm_phase phase);
    58              1                          1                 super.report_phase(phase);
    59              1                          1                 `uvm_info("report_phase",$sformatf("cases passed %0d,failed cases %0d",correct,error),UVM_MEDIUM);
    60                                                       endfunction 
    61                                               
    62                                               
    63                                                   endclass
    64                                               
    65                                               
    66                                               
    67                                               
    68                                               
    69                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                        11         7         4      63.6

================================Branch Details================================

Branch Coverage for file shift_scoreboard.sv --

------------------------------------IF Branch------------------------------------
    35                                     83333     Count coming in to IF
    35              1                    ***0***                     if(itm.dataout != dataout_ref)begin
    39              1                      83333                     else correct++;
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    36                                   ***0***     Count coming in to IF
    36              1                    ***0***                         `uvm_error("run_phase",$sformatf("Trascaion recieved is %s and data_out ref =%0d",itm.convert2string(),dataout_ref));
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    44                                     83333     Count coming in to IF
    44              1                      40635                     if (itms.mode) // rotate
    50              1                      20116                         if (itms.direction) // left
    52              1                      22582                         else
Branch totals: 3 hits of 3 branches = 100.0%

------------------------------------IF Branch------------------------------------
    45                                     40635     Count coming in to IF
    45              1                      20035                         if (itms.direction) // left
    47              1                      20600                         else
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    59                                         1     Count coming in to IF
    59              1                          1                 `uvm_info("report_phase",$sformatf("cases passed %0d,failed cases %0d",correct,error),UVM_MEDIUM);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File shift_scoreboard.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: shift_seq_item.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           13         1        12       7.6

================================Statement Details================================

Statement Coverage for file shift_seq_item.sv --

    1                                                
    2                                                package shift_seq_item_pkg;
    3                                                    import uvm_pkg::*;
    4                                                    `include "uvm_macros.svh"
    5                                                
    6                                                    class shift_seq_item extends uvm_sequence_item ;
    7               1                    ***0***             `uvm_object_utils(shift_seq_item);
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                    ***0***     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                    ***0***     
    7              10                    ***0***     
    8                                                
    9                                                        function new(string name = "shift_reg_sequence_item");
    10              1                      83334                 super.new(name);
    11                                                       endfunction
    12                                               
    13                                                       rand logic reset;
    14                                                       rand logic serial_in, direction, mode;
    15                                                       rand logic [5:0] datain ;
    16                                                       logic [5:0] dataout;
    17                                               
    18                                                        function string convert2string();
    19              1                    ***0***                 return $sformatf("%s  reset =%0b serial_in=%0b ,direction=%0b ,mode=%0b ,datain=%0b ,dataout=%0b ",
    20                                                           super.convert2string(),reset,serial_in,direction,mode,datain,dataout);            
    21                                                       endfunction
    22                                               
    23                                                       function string convert2string_stimulus();
    24              1                    ***0***                 return $sformatf("%s  reset =%0b serial_in=%0b ,direction=%0b ,mode=%0b ,datain=%0b  ", super.convert2string(),reset,serial_in,direction,mode,datain);            
    25                                                       endfunction
    26                                               
    27                                                       constraint x{
    28                                                           reset dist {1:=95 ,0 :=5};
    29                                                       }
    30                                                   
    31                                               
    32                                                   endclass
    33                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                        10         0        10       0.0

================================Branch Details================================

Branch Coverage for file shift_seq_item.sv --

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***             `uvm_object_utils(shift_seq_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               2                    ***0***             `uvm_object_utils(shift_seq_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***             `uvm_object_utils(shift_seq_item);
    7               4                    ***0***             `uvm_object_utils(shift_seq_item);
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               5                    ***0***             `uvm_object_utils(shift_seq_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***             `uvm_object_utils(shift_seq_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File shift_seq_item.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: shift_sequencer.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                            4         0         4       0.0

================================Statement Details================================

Statement Coverage for file shift_sequencer.sv --

    1                                                package  shift_sequencer_pkg;
    2                                                
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                    import shift_seq_item_pkg::*;
    6                                                    class shift_reg_sequencer extends uvm_sequencer #(shift_seq_item);
    7               1                    ***0***             `uvm_component_utils(shift_reg_sequencer);
    7               2                    ***0***     
    7               3                    ***0***     
    8                                                
    9                                                        function new(string name="sequencer",uvm_component phase);
    10              1                    ***0***                 super.new(name,phase);
    11                                                       endfunction
    12                                                   endclass
    13                                               
    14                                               
    15                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         0         0         0     100.0
Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File shift_sequencer.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: test.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           25        21         4      84.0

================================Statement Details================================

Statement Coverage for file test.sv --

    1                                                package test_pkg;
    2                                                    import uvm_pkg::*;
    3                                                        `include "uvm_macros.svh"
    4                                                    import ALSU_sequence_pkg::*;
    5                                                    import ALSU_env_pkg::*;
    6                                                    import shift_env_pkg::*;
    7                                                    import config_object_pkg::*;
    8                                                    import ALSU_seq_item_pkg::*;
    9                                                    class ALSU_test extends uvm_test;
    10              1                    ***0***             `uvm_component_utils(ALSU_test);
    10              2                    ***0***     
    10              3                          4     
    11                                               
    12                                                       reset_sequence reset_seq;
    13                                                       main_sequence main_seq;
    14                                                       second_sequence second;
    15                                               
    16                                                       ALSU_env A_env;
    17                                                       shit_reg_env S_env;
    18                                               
    19                                                       virtual ALSU_if vif;
    20                                                       ALSU_config ALSU_cfg;
    21                                                       ALSU_config SHIFT_cfg;
    22                                               
    23                                                       function new(string name ="test",uvm_component parent=null);
    24              1                          1                 super.new(name,parent);
    25                                                       endfunction 
    26                                               
    27                                                       function void build_phase(uvm_phase phase);
    28              1                          1                 super.build_phase(phase);
    29              1                          1                 reset_seq=reset_sequence::type_id::create("reset");
    30              1                          1                 main_seq =main_sequence::type_id::create("main");
    31              1                          1                 second=second_sequence::type_id::create("second");
    32                                               
    33              1                          1                 A_env=ALSU_env::type_id::create("ALSU env",this); 
    34              1                          1                 S_env=shit_reg_env::type_id::create("SHIFT env",this); 
    35                                               
    36                                                           //set_type_override_by_type(seq_item::get_type(), alsu_seq_item_valid_invalid::get_type());
    37              1                          1                 ALSU_cfg=ALSU_config::type_id::create("ALSU object");
    38              1                          1                 SHIFT_cfg=ALSU_config::type_id::create("SHIFT object");
    39                                               
    40                                                           if(!uvm_config_db #(virtual ALSU_if)::get(this,"","ALSU_K",ALSU_cfg.vif))
    41              1                    ***0***                     `uvm_fatal("build_phase","unable to get ALSU virtual if");
    42                                               
    43                                                           if(!uvm_config_db #(virtual shift_reg_if)::get(this,"","SHIFT_K",SHIFT_cfg.sif))
    44              1                    ***0***                     `uvm_fatal("build_phase","unable to get shift virtual if");
    45              1                          1                 ALSU_cfg.is_active =UVM_ACTIVE;
    46              1                          1                 SHIFT_cfg.is_active =UVM_PASSIVE;
    47                                               
    48              1                          1                 uvm_config_db #(ALSU_config)::set(this,"*","ALSU_cfg",ALSU_cfg);
    49              1                          1                 uvm_config_db #(ALSU_config)::set(this,"*","shift_cfg",SHIFT_cfg);
    50                                               
    51                                                       endfunction
    52                                               
    53                                                       task run_phase(uvm_phase phase);
    54              1                          1                 super.run_phase(phase);
    55              1                          1                 phase.raise_objection(this);
    56                                                           //start seq
    57                                                          /* `uvm_info("run_phase","reset sequence start",UVM_MEDIUM);
    58                                                           reset_seq.start(A_env.agt.sqr);*/
    59              1                          1                 `uvm_info("run_phase","main sequence start",UVM_MEDIUM);
    60              1                          1                 main_seq.start(A_env.agt.sqr); 
    61              1                          1                 `uvm_info("run_phase","second sequence start",UVM_MEDIUM);
    62              1                          1                 second.start(A_env.agt.sqr);     
    63              1                          1                 phase.drop_objection(this);
    64                                                       endtask      
    65                                               
    66                                                           endclass //ALSU_if
    67                                               
    68                                                   
    69                                               endpackage

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                        12         4         8      33.3

================================Branch Details================================

Branch Coverage for file test.sv --

------------------------------------IF Branch------------------------------------
    40                                         1     Count coming in to IF
    40              1                    ***0***                 if(!uvm_config_db #(virtual ALSU_if)::get(this,"","ALSU_K",ALSU_cfg.vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    41                                   ***0***     Count coming in to IF
    41              1                    ***0***                     `uvm_fatal("build_phase","unable to get ALSU virtual if");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    43                                         1     Count coming in to IF
    43              1                    ***0***                 if(!uvm_config_db #(virtual shift_reg_if)::get(this,"","SHIFT_K",SHIFT_cfg.sif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    44                                   ***0***     Count coming in to IF
    44              1                    ***0***                     `uvm_fatal("build_phase","unable to get shift virtual if");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    59                                         1     Count coming in to IF
    59              1                          1                 `uvm_info("run_phase","main sequence start",UVM_MEDIUM);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    61                                         1     Count coming in to IF
    61              1                          1                 `uvm_info("run_phase","second sequence start",UVM_MEDIUM);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      0         0         0     100.0

================================Toggle Details================================

Toggle Coverage for File test.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------

Total Node Count     =          0 
Toggled Node Count   =          0 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (0 of 0 bins)

=================================================================================
=== File: top.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           10        10         0     100.0

================================Statement Details================================

Statement Coverage for file top.sv --

    1                                                import uvm_pkg::*;
    2                                                    `include "uvm_macros.svh"
    3                                                import test_pkg::*;
    4                                                
    5                                                module top();
    6                                                bit clk=0;
    7               1                     100001     always #5 clk=!clk;
    7               2                     100000     
    8                                                
    9                                                ALSU_if if_t(clk);
    10                                               shift_reg_if sr_t();
    11                                               shift_reg SR(sr_t);
    12                                               ALSU DUT (if_t);
    13                                               
    14                                               
    15              1                      12450     assign sr_t.serial_in=DUT.serial_in_reg;
    16              1                      12310     assign sr_t.direction=DUT.direction_reg;
    17              1                      45749     assign sr_t.mode=DUT.opcode_reg[0];
    18              1                      37525     assign sr_t.datain=if_t.out;
    19              1                      40396     assign DUT.out_shift_reg=sr_t.dataout;
    20                                               
    21                                               bind ALSU Asseritions AS(if_t);
    22                                               
    23                                               initial begin
    24              1                          1         uvm_config_db #(virtual ALSU_if)::set(null,"*","ALSU_K",if_t);
    25              1                          1         uvm_config_db #(virtual shift_reg_if)::set(null,"*","SHIFT_K",sr_t);
    26              1                          1         run_test("ALSU_test");
    27                                               end
    28                                               
    29                                               endmodule

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         0         0         0     100.0
Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0
Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      2         2         0     100.0

================================Toggle Details================================

Toggle Coverage for File top.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------
          6                                    clk           1           1                              100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =      100.0% (2 of 2 bins)

COVERGROUP COVERAGE:
-----------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal    Status               
                                                                                              
-----------------------------------------------------------------------------------------------
 TYPE /shift_coverage_pkg/shift_reg_cov/covgup         100.0%        100    Covered              
    covered/total bins:                                    68         68                      
    missing/total bins:                                     0         68                      
    % Hit:                                             100.0%        100                      
    Coverpoint covgup::data_in                         100.0%        100    Covered              
        covered/total bins:                                64         64                      
        missing/total bins:                                 0         64                      
        % Hit:                                         100.0%        100                      
        bin auto[0]                                     24682          1    Covered              
        bin auto[1]                                      6977          1    Covered              
        bin auto[2]                                      4075          1    Covered              
        bin auto[3]                                      5249          1    Covered              
        bin auto[4]                                      1317          1    Covered              
        bin auto[5]                                       514          1    Covered              
        bin auto[6]                                      1355          1    Covered              
        bin auto[7]                                       175          1    Covered              
        bin auto[8]                                       429          1    Covered              
        bin auto[9]                                       701          1    Covered              
        bin auto[10]                                       58          1    Covered              
        bin auto[11]                                        8          1    Covered              
        bin auto[12]                                      424          1    Covered              
        bin auto[13]                                       57          1    Covered              
        bin auto[14]                                       56          1    Covered              
        bin auto[15]                                      149          1    Covered              
        bin auto[16]                                      328          1    Covered              
        bin auto[17]                                       30          1    Covered              
        bin auto[18]                                       64          1    Covered              
        bin auto[19]                                       36          1    Covered              
        bin auto[20]                                        5          1    Covered              
        bin auto[21]                                        3          1    Covered              
        bin auto[22]                                        1          1    Covered              
        bin auto[23]                                        6          1    Covered              
        bin auto[24]                                       79          1    Covered              
        bin auto[25]                                       23          1    Covered              
        bin auto[26]                                       48          1    Covered              
        bin auto[27]                                       18          1    Covered              
        bin auto[28]                                       84          1    Covered              
        bin auto[29]                                      242          1    Covered              
        bin auto[30]                                      641          1    Covered              
        bin auto[31]                                     1071          1    Covered              
        bin auto[32]                                      995          1    Covered              
        bin auto[33]                                      691          1    Covered              
        bin auto[34]                                       69          1    Covered              
        bin auto[35]                                       55          1    Covered              
        bin auto[36]                                       69          1    Covered              
        bin auto[37]                                       13          1    Covered              
        bin auto[38]                                       26          1    Covered              
        bin auto[39]                                       28          1    Covered              
        bin auto[40]                                       25          1    Covered              
        bin auto[41]                                       50          1    Covered              
        bin auto[42]                                        8          1    Covered              
        bin auto[43]                                       16          1    Covered              
        bin auto[44]                                        4          1    Covered              
        bin auto[45]                                       25          1    Covered              
        bin auto[46]                                       75          1    Covered              
        bin auto[47]                                      267          1    Covered              
        bin auto[48]                                      156          1    Covered              
        bin auto[49]                                      108          1    Covered              
        bin auto[50]                                       49          1    Covered              
        bin auto[51]                                       97          1    Covered              
        bin auto[52]                                      340          1    Covered              
        bin auto[53]                                      197          1    Covered              
        bin auto[54]                                       80          1    Covered              
        bin auto[55]                                      526          1    Covered              
        bin auto[56]                                      637          1    Covered              
        bin auto[57]                                      747          1    Covered              
        bin auto[58]                                     1295          1    Covered              
        bin auto[59]                                     1266          1    Covered              
        bin auto[60]                                     4142          1    Covered              
        bin auto[61]                                     5728          1    Covered              
        bin auto[62]                                     6120          1    Covered              
        bin auto[63]                                    10522          1    Covered              
    Coverpoint covgup::MODE                            100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin mode0                                       42698          1    Covered              
        bin mode1                                       40635          1    Covered              
    Coverpoint covgup::direction                       100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin direction0                                  43182          1    Covered              
        bin direction1                                  40151          1    Covered              
 CLASS shift_reg_cov
 TYPE /ALSU_coverage_pkg/ALSU_coverage/cvr_gp          100.0%        100    Covered              
    covered/total bins:                                    63         67                      
    missing/total bins:                                     4         67                      
    % Hit:                                              94.0%        100                      
    Coverpoint cvr_gp::CIN                               0.0%        100    ZERO                 
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
    Coverpoint cvr_gp::red_op_A                          0.0%        100    ZERO                 
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
    Coverpoint cvr_gp::red_op_B                          0.0%        100    ZERO                 
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
    Coverpoint cvr_gp::bypass_A                          0.0%        100    ZERO                 
        covered/total bins:                                 0          0                      
        missing/total bins:                                 0          0                      
        % Hit:                                         100.0%        100                      
    Coverpoint cvr_gp::bypass_B                          0.0%        100    ZERO                 
        covered/total bins:                                 0          0                      
        missing/total bins:                                 0          0                      
        % Hit:                                         100.0%        100                      
    Coverpoint cvr_gp::direction                         0.0%        100    ZERO                 
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
    Coverpoint cvr_gp::serial_in                         0.0%        100    ZERO                 
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
    Coverpoint cvr_gp::special                           0.0%        100    ZERO                 
        covered/total bins:                                 6          6                      
        missing/total bins:                                 0          6                      
        % Hit:                                         100.0%        100                      
    Coverpoint cvr_gp::CB1                             100.0%        100    Covered              
        covered/total bins:                                 5          5                      
        missing/total bins:                                 0          5                      
        % Hit:                                         100.0%        100                      
    Coverpoint cvr_gp::CB2                             100.0%        100    Covered              
        covered/total bins:                                 5          5                      
        missing/total bins:                                 0          5                      
        % Hit:                                         100.0%        100                      
    Coverpoint cvr_gp::A_M                             100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
    Coverpoint cvr_gp::CB3                             100.0%        100    Covered              
        covered/total bins:                                 7          7                      
        missing/total bins:                                 0          7                      
        % Hit:                                         100.0%        100                      
    Cross cvr_gp::corner_case                          100.0%        100    Covered              
        covered/total bins:                                18         18                      
        missing/total bins:                                 0         18                      
        % Hit:                                         100.0%        100                      
    Cross cvr_gp::Addation                             100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
    Cross cvr_gp::shift                                100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
    Cross cvr_gp::shift_rotate                         100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
    Cross cvr_gp::walkingones                          100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
    Cross cvr_gp::invalidation                         100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
 CLASS ALSU_coverage
 Covergroup instance \/ALSU_coverage_pkg::ALSU_coverage::cvr_gp  
                                                       100.0%        100    Covered              
    covered/total bins:                                    63         67                      
    missing/total bins:                                     4         67                      
    % Hit:                                              94.0%        100                      
    Coverpoint CIN [1]                                 100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin CIN0                                        25028          1    Covered              
        bin CIN1                                        24972          1    Covered              
    Coverpoint red_op_A [1]                            100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin red_op_A0                                   41722          1    Covered              
        bin red_op_A1                                    8278          1    Covered              
    Coverpoint red_op_B [1]                            100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin red_op_B0                                   41714          1    Covered              
        bin red_op_B1                                    8286          1    Covered              
    Coverpoint bypass_A [1]                              0.0%        100    ZERO                 
        covered/total bins:                                 0          2                      
        missing/total bins:                                 2          2                      
        % Hit:                                           0.0%        100                      
        bin bypass_A0                                       0          1    ZERO                 
        bin bypass_A1                                       0          1    ZERO                 
    Coverpoint bypass_B [1]                              0.0%        100    ZERO                 
        covered/total bins:                                 0          2                      
        missing/total bins:                                 2          2                      
        % Hit:                                           0.0%        100                      
        bin bypass_B0                                       0          1    ZERO                 
        bin bypass_B1                                       0          1    ZERO                 
    Coverpoint direction [1]                           100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin direction0                                  25216          1    Covered              
        bin direction1                                  24784          1    Covered              
    Coverpoint serial_in [1]                           100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin serial_in0                                  25079          1    Covered              
        bin serial_in1                                  24921          1    Covered              
    Coverpoint special [1]                             100.0%        100    Covered              
        covered/total bins:                                 6          6                      
        missing/total bins:                                 0          6                      
        % Hit:                                         100.0%        100                      
        bin operataions[OR]                              8355          1    Covered              
        bin operataions[XOR]                             8335          1    Covered              
        bin operataions[ADD]                             8302          1    Covered              
        bin operataions[MULT]                            8378          1    Covered              
        bin operataions[SHIFT]                           8269          1    Covered              
        bin operataions[ROTATE]                          8361          1    Covered              
    Coverpoint CB1                                     100.0%        100    Covered              
        covered/total bins:                                 5          5                      
        missing/total bins:                                 0          5                      
        % Hit:                                         100.0%        100                      
        bin A_data_0                                     8447          1    Covered              
        bin A_data_max                                   8116          1    Covered              
        bin A_data_min                                   6791          1    Covered              
        bin A_data_walkingones[1]                         567          1    Covered              
        bin A_data_walkingones[2]                         552          1    Covered              
        default bin A_data_default                      15868               Occurred             
    Coverpoint CB2                                     100.0%        100    Covered              
        covered/total bins:                                 5          5                      
        missing/total bins:                                 0          5                      
        % Hit:                                         100.0%        100                      
        bin B_data_0                                     9482          1    Covered              
        bin B_data_max                                   8107          1    Covered              
        bin B_data_min                                   5492          1    Covered              
        bin B_data_walkingones[1]                         557          1    Covered              
        bin B_data_walkingones[2]                         515          1    Covered              
        default bin B_data_default                      16248               Occurred             
    Coverpoint A_M                                     100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin Bins_arith[ADD]                              8302          1    Covered              
        bin Bins_arith[MULT]                             8378          1    Covered              
    Coverpoint CB3                                     100.0%        100    Covered              
        covered/total bins:                                 7          7                      
        missing/total bins:                                 0          7                      
        % Hit:                                         100.0%        100                      
        illegal_bin Bins_invalid                            0               ZERO                 
        bin Bins_shift[SHIFT]                            8269          1    Covered              
        bin Bins_shift[ROTATE]                           8361          1    Covered              
        bin Bins_arith[ADD]                              8302          1    Covered              
        bin Bins_arith[MULT]                             8378          1    Covered              
        bin Bins_bitwise[OR]                             8355          1    Covered              
        bin Bins_bitwise[XOR]                            8335          1    Covered              
        bin Bins_trans                                     10          1    Covered              
    Cross corner_case                                  100.0%        100    Covered              
        covered/total bins:                                18         18                      
        missing/total bins:                                 0         18                      
        % Hit:                                         100.0%        100                      
        bin <Bins_arith[ADD],B_data_0,A_data_0>          1203          1    Covered              
        bin <Bins_arith[ADD],B_data_max,A_data_0>         143          1    Covered              
        bin <Bins_arith[ADD],B_data_0,A_data_max>         123          1    Covered              
        bin <Bins_arith[ADD],B_data_max,A_data_max> 
                                                         1225          1    Covered              
        bin <Bins_arith[MULT],B_data_0,A_data_0>         1244          1    Covered              
        bin <Bins_arith[MULT],B_data_max,A_data_0>        165          1    Covered              
        bin <Bins_arith[MULT],B_data_0,A_data_max>        130          1    Covered              
        bin <Bins_arith[MULT],B_data_max,A_data_max> 
                                                         1264          1    Covered              
        bin <Bins_arith[ADD],B_data_0,A_data_min>         120          1    Covered              
        bin <Bins_arith[ADD],B_data_max,A_data_min> 
                                                          120          1    Covered              
        bin <Bins_arith[MULT],B_data_0,A_data_min>        134          1    Covered              
        bin <Bins_arith[MULT],B_data_max,A_data_min> 
                                                          121          1    Covered              
        bin <Bins_arith[ADD],B_data_min,A_data_0>         109          1    Covered              
        bin <Bins_arith[ADD],B_data_min,A_data_max> 
                                                          124          1    Covered              
        bin <Bins_arith[MULT],B_data_min,A_data_0>         99          1    Covered              
        bin <Bins_arith[MULT],B_data_min,A_data_max> 
                                                          107          1    Covered              
        bin <Bins_arith[ADD],B_data_min,A_data_min> 
                                                           89          1    Covered              
        bin <Bins_arith[MULT],B_data_min,A_data_min> 
                                                           86          1    Covered              
        ignore_bin walkingA                               172               Occurred             
        ignore_bin walkingB                               149               Occurred             
    Cross Addation                                     100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin Add_cin0                                     4216          1    Covered              
        bin Add_cin1                                     4086          1    Covered              
    Cross shift                                        100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin shift_Si0                                    4147          1    Covered              
        bin shift_Si1                                    4147          1    Covered              
    Cross shift_rotate                                 100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin shu_rot_d0                                   8364          1    Covered              
        bin shu_rot_d1                                   8266          1    Covered              
    Cross walkingones                                  100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin arithA                                         94          1    Covered              
        bin arithB                                         39          1    Covered              
    Cross invalidation                                 100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        bin ROpA_notXoR                                  6686          1    Covered              
        bin ROpB_notXoR                                  6658          1    Covered              

 [1] - Does not contribute coverage as weight is 0

TOTAL COVERGROUP COVERAGE: 100.0%  COVERGROUP TYPES: 2

DIRECTIVE COVERAGE:
---------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Count Status    
                                         Unit   UnitType                                      
---------------------------------------------------------------------------------------------
/top/DUT/AS/leds_cover                   Asseritions Verilog  SVA  _Assertions.sv(235)
                                                                               8626 Covered   
/top/DUT/AS/bypass1_cover                Asseritions Verilog  SVA  _Assertions.sv(239)
                                                                                181 Covered   
/top/DUT/AS/bypass3_cover                Asseritions Verilog  SVA  _Assertions.sv(241)
                                                                               1544 Covered   
/top/DUT/AS/bypass4_cover                Asseritions Verilog  SVA  _Assertions.sv(242)
                                                                               1531 Covered   
/top/DUT/AS/INVALID_cover                Asseritions Verilog  SVA  _Assertions.sv(245)
                                                                               7008 Covered   
/top/DUT/AS/OR1_cover                    Asseritions Verilog  SVA  _Assertions.sv(248)
                                                                                363 Covered   
/top/DUT/AS/OR3_cover                    Asseritions Verilog  SVA  _Assertions.sv(250)
                                                                                228 Covered   
/top/DUT/AS/OR4_cover                    Asseritions Verilog  SVA  _Assertions.sv(251)
                                                                                213 Covered   
/top/DUT/AS/OR5_cover                    Asseritions Verilog  SVA  _Assertions.sv(252)
                                                                               6580 Covered   
/top/DUT/AS/XOR1_cover                   Asseritions Verilog  SVA  _Assertions.sv(255)
                                                                                324 Covered   
/top/DUT/AS/XOR3_cover                   Asseritions Verilog  SVA  _Assertions.sv(257)
                                                                                192 Covered   
/top/DUT/AS/XOR4_cover                   Asseritions Verilog  SVA  _Assertions.sv(258)
                                                                                233 Covered   
/top/DUT/AS/XOR5_cover                   Asseritions Verilog  SVA  _Assertions.sv(259)
                                                                               6577 Covered   
/top/DUT/AS/FullADD_cover                Asseritions Verilog  SVA  _Assertions.sv(262)
                                                                               5623 Covered   
/top/DUT/AS/Mult_cover                   Asseritions Verilog  SVA  _Assertions.sv(266)
                                                                               5587 Covered   
/top/DUT/AS/shiftL_cover                 Asseritions Verilog  SVA  _Assertions.sv(269)
                                                                               2734 Covered   
/top/DUT/AS/shiftR_cover                 Asseritions Verilog  SVA  _Assertions.sv(270)
                                                                               2837 Covered   
/top/DUT/AS/rotateLeft_cover             Asseritions Verilog  SVA  _Assertions.sv(273)
                                                                               2730 Covered   
/top/DUT/AS/rotateRight_cover            Asseritions Verilog  SVA  _Assertions.sv(274)
                                                                               2844 Covered   

TOTAL DIRECTIVE COVERAGE: 100.0%  COVERS: 19

ASSERTION RESULTS:
-------------------------------------------------------
Name                 File(Line)           Failure Pass 
                                          Count   Count 
-------------------------------------------------------
/top/DUT/AS/rst_check
                     _Assertions.sv(9)          0     1
/top/DUT/AS/leds_check
                     _Assertions.sv(185)        0     1
/top/DUT/AS/bypass1_check
                     _Assertions.sv(187)        0     1
/top/DUT/AS/bypass2_check
                     _Assertions.sv(188)        0     0
/top/DUT/AS/bypass3_check
                     _Assertions.sv(189)        0     1
/top/DUT/AS/bypass4_check
                     _Assertions.sv(190)        0     1
/top/DUT/AS/INVALID_check
                     _Assertions.sv(193)        0     1
/top/DUT/AS/OR1_check
                     _Assertions.sv(199)        0     1
/top/DUT/AS/OR2_check
                     _Assertions.sv(200)        0     0
/top/DUT/AS/OR3_check
                     _Assertions.sv(201)        0     1
/top/DUT/AS/OR4_check
                     _Assertions.sv(202)        0     1
/top/DUT/AS/OR5_check
                     _Assertions.sv(203)        0     1
/top/DUT/AS/XOR1_check
                     _Assertions.sv(207)        0     1
/top/DUT/AS/XOR2_check
                     _Assertions.sv(208)        0     0
/top/DUT/AS/XOR3_check
                     _Assertions.sv(209)        0     1
/top/DUT/AS/XOR4_check
                     _Assertions.sv(210)        0     1
/top/DUT/AS/XOR5_check
                     _Assertions.sv(211)        0     1
/top/DUT/AS/FullADD_check
                     _Assertions.sv(215)        0     1
/top/DUT/AS/halfADD_check
                     _Assertions.sv(216)        0     0
/top/DUT/AS/MULT_check
                     _Assertions.sv(220)        0     1
/top/DUT/AS/shift_R_check
                     _Assertions.sv(224)        0     1
/top/DUT/AS/shift_L_check
                     _Assertions.sv(225)        0     1
/top/DUT/AS/rotate_R_check
                     _Assertions.sv(229)        0     1
/top/DUT/AS/rotate_L_check
                     _Assertions.sv(230)        0     1
/ALSU_sequence_pkg/main_sequence/body/#ublk#37877255#31/immed__37
                     ALSU_sequence.sv(37)       0     1
/ALSU_sequence_pkg/second_sequence/body/#anonblk#37877255#53#4#/#ublk#37877255#53/immed__62
                     ALSU_sequence.sv(62)       0     1

Total Coverage By File (code coverage only, filtered view): 73.4%

